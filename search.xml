<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ROS学习笔记</title>
      <link href="/2021/11/08/ROS/ROS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/11/08/ROS/ROS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="ROS学习笔记"><a href="#ROS学习笔记" class="headerlink" title="ROS学习笔记"></a><strong>ROS学习笔记</strong></h1><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225541.png"></p><blockquote><p><strong>声明：</strong><br>本文是我在学习ROS课程中总结的笔记；便于日后的巩固和复习。<br>参考资料：<br><a href="https://www.bilibili.com/video/BV1Ci4y1L7ZZ?from=search&seid=4582636687628255908&spm_id_from=333.337.0.0">【奥特学园】《ROS理论与实践》</a><br> <a href="http://wiki.ros.org/ROS/Tutorials/">ROS Wiki</a></p></blockquote><h2 id="一、Ubuntu下ROS-的安装和测试"><a href="#一、Ubuntu下ROS-的安装和测试" class="headerlink" title="一、Ubuntu下ROS 的安装和测试"></a><strong>一、Ubuntu下ROS 的安装和测试</strong></h2><h4 id="1-1、在Ubuntu下选择合适的ROS版本"><a href="#1-1、在Ubuntu下选择合适的ROS版本" class="headerlink" title="1.1、在Ubuntu下选择合适的ROS版本"></a><strong>1.1、在Ubuntu下选择合适的ROS版本</strong></h4><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225548.png"></p><p>根据自己的Ubuntu坏境选择ROS版本，建议安装最新版本。</p><h4 id="1-2、配置ubuntu的软件和更新"><a href="#1-2、配置ubuntu的软件和更新" class="headerlink" title="1.2、配置ubuntu的软件和更新"></a><strong>1.2、配置ubuntu的软件和更新</strong></h4><p>配置ubuntu的软件和更新，允许安装不经认证的软件。</p><p>首先打开“软件和更新”对话框，具体可以在 Ubuntu 搜索按钮中搜索。</p><p>打开后按照下图进行配置（确保勾选了”restricted”， “universe，” 和 “multiverse.”）</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225554.png"></p><h4 id="1-3、设置安装源"><a href="#1-3、设置安装源" class="headerlink" title="1.3、设置安装源"></a><strong>1.3、设置安装源</strong></h4><p>官方默认安装源:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c &#x27;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br></pre></td></tr></table></figure><p>或来自国内清华的安装源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c &#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br></pre></td></tr></table></figure><p>或来自国内中科大的安装源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c &#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://m</span><br></pre></td></tr></table></figure><p><strong>尽量使用国内安装源，安装的数度会快一些</strong></p><h4 id="1-4、设置key"><a href="#1-4、设置key" class="headerlink" title="1.4、设置key"></a><strong>1.4、设置key</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver &#x27;hkp://keyserver.ubuntu</span><br></pre></td></tr></table></figure><p>若无法连接到密钥服务器，可以尝试替换上面命令中的 <code>hkp://keyserver.ubuntu.com:80</code> 为 <code>hkp://pgp.mit.edu:80</code> 。 </p><p>也可以使用curl命令替换apt-key命令，这在使用代理服务器的情况下比较有用： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL &#x27;http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654&#x27; | sudo apt-key add -</span><br></pre></td></tr></table></figure><h4 id="1-5、安装ROS"><a href="#1-5、安装ROS" class="headerlink" title="1.5、安装ROS"></a><strong>1.5、安装ROS</strong></h4><p>①、使用以下命令，确保Ubuntu软件包索引是最新的： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>②、安装完整桌面版的ROS，完整版包含了 ROS、<a href="http://wiki.ros.org/rqt">rqt</a>、<a href="http://wiki.ros.org/rviz">rviz</a>、机器人通用库、2D/3D 模拟器、导航以及 2D/3D 感知包。</p><p><strong>Ubuntu16.04下安装ROS Kinetic Kame 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-kinetic-desktop-full</span><br></pre></td></tr></table></figure><p><strong>Ubuntu18.04下安装ROS Melodic 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ros-melodic-desktop-full</span><br></pre></td></tr></table></figure><p><strong>Ubuntu20.04下安装ROS Noetic 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ros-noetic-desktop-full</span><br></pre></td></tr></table></figure><p>出现错误</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225602.png"></p><p>重复多次安装一下，可能是因为网络的原因。</p><h4 id="1-6、配置ROS坏境"><a href="#1-6、配置ROS坏境" class="headerlink" title="1.6、配置ROS坏境"></a><strong>1.6、配置ROS坏境</strong></h4><p>配置环境变量，方便在任意 终端中使用 ROS。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;source /opt/ros/noetic/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="1-7、ROS卸载"><a href="#1-7、ROS卸载" class="headerlink" title="1.7、ROS卸载"></a><strong>1.7、ROS卸载</strong></h4><p>如果需要卸载ROS可以调用如下命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove ros-noetic-*</span><br></pre></td></tr></table></figure><h4 id="1-8、初始化-rosdep"><a href="#1-8、初始化-rosdep" class="headerlink" title="1.8、初始化 rosdep"></a><strong>1.8、初始化 rosdep</strong></h4><p>在使用 ROS 之前，需要初始化 <code>rosdep</code>。<code>rosdep</code> 能够轻松地安装被想要编译的源代码，或被某些 ROS 核心组件需要的系统依赖。</p><p>避免后面出现sudo rosdep：找不到命令提示，需要执行如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-rosdep</span><br></pre></td></tr></table></figure><p> 初始化rosdep</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rosdep init</span><br><span class="line">rosdep update</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225608.png"></p><p>但是，在 rosdep 初始化时，多半会抛出异常。</p><p><strong>问题:</strong></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225615.png"></p><p><strong>原因:</strong></p><p>境外资源被屏蔽。</p><p><strong>解决:</strong></p><p>百度或google搜索，解决方式有多种(<a href="https://github.com/ros/rosdistro/issues/9721)%EF%BC%8C%E5%8F%AF%E6%83%9C%E5%9C%A8">https://github.com/ros/rosdistro/issues/9721)，可惜在</a> ubuntu20.04 下，集体失效。</p><p>新思路:<em>将相关资源备份到 gitee,修改 rosdep 源码,重新定位资源。</em></p><p><strong>实现:</strong></p><p>1.先打开资源备份路径:<a href="https://gitee.com/zhao-xuzuo/rosdistro%EF%BC%8C%E6%89%93%E5%BC%80">https://gitee.com/zhao-xuzuo/rosdistro，打开</a> rosdistro/<strong>rosdep</strong>/<strong>sources.list.d</strong>/<strong>20-default.list</strong>文件留作备用(主要是复用URL的部分内容:gitee.com/zhao-xuzuo/rosdistro/raw/master)。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225620.png"></p><p>2.进入”/usr/lib/python3/dist-packages/“ 查找rosdep中和<code>raw.githubusercontent.com</code>相关的内容，调用命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -type f | xargs grep &quot;raw.githubusercontent&quot;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225625.png"></p><p>3.修改相关文件，主要有: ./rosdistro/<strong>init</strong>.py、./rosdep2/gbpdistro_support.py、./rosdep2/sources_list.py 、./rosdep2/rep3.py。可以使用<code>sudo gedit</code>命令修改文件:</p><p>文件中涉及的 URL 内容，如果是:<code>raw.githubusercontent.com/ros/rosdistro/master</code>都替换成步骤1中准备的<code>gitee.com/zhao-xuzuo/rosdistro/raw/master</code>即可。</p><p>修改完毕，再重新执行命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rosdep init</span><br><span class="line">rosdep update</span><br></pre></td></tr></table></figure><p>就可以正常实现 rosdep 的初始化与更新了。</p><h4 id="1-9、测试-ROS——运行小海龟"><a href="#1-9、测试-ROS——运行小海龟" class="headerlink" title="1.9、测试 ROS——运行小海龟"></a><strong>1.9、测试 ROS——运行小海龟</strong></h4><ol><li><p>首先启动三个终端(ctrl + alt + T)</p></li><li><p>第一个终端运行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br></pre></td></tr></table></figure></li><li><p>第二个终端运行命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun turtlesim turtlesim_node</span><br></pre></td></tr></table></figure><p>此时会弹出图形化界面</p></li><li><p>第三个终端运行命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun turtlesim turtle_teleop_key</span><br></pre></td></tr></table></figure><p>在3中可以通过上下左右控制2中乌龟的运动</p></li></ol><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225632.png"></p><p><strong>注：</strong></p><p>有时候下载任务不小心被 CTRL+Z暂停了</p><p>使用： jobs 命令查看已有进程 使用fg %x恢复执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fg %x</span><br></pre></td></tr></table></figure><p> 参考文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/qq_44830040/article/details/106049992</span><br><span class="line">https://blog.csdn.net/weixin_43159148/article/details/83375218</span><br></pre></td></tr></table></figure><h2 id="二、ROS开发常用软件"><a href="#二、ROS开发常用软件" class="headerlink" title="二、ROS开发常用软件"></a><strong>二、ROS开发常用软件</strong></h2><h4 id="2-1、Terminator"><a href="#2-1、Terminator" class="headerlink" title="2.1、Terminator"></a><strong>2.1、Terminator</strong></h4><h5 id="安装命令："><a href="#安装命令：" class="headerlink" title="安装命令："></a>安装命令：</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install terminator</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225637.png"></p><p>在Ubuntu中搜索添加到桌面</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225641.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225646.png"></p><h5 id="Terminator-软件常用快捷键"><a href="#Terminator-软件常用快捷键" class="headerlink" title="Terminator 软件常用快捷键"></a>Terminator 软件常用快捷键</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">在同一个标签内的操作：</span><br><span class="line">Ctrl+Shift+O                    //水平分割终端</span><br><span class="line">Ctrl+Shift+E                    //垂直分割终端</span><br><span class="line">Alt+Up                          //移动到上面的终端</span><br><span class="line">Alt+Down                        //移动到下面的终端</span><br><span class="line">Alt+Left                        //移动到左边的终端</span><br><span class="line">Alt+Right                       //移动到右边的终端</span><br><span class="line">Ctrl+Shift+W                    //关闭当前终端</span><br><span class="line">Ctrl+Shift+Q                    //退出当前窗口，当前窗口的所有终端都将被关闭</span><br><span class="line">Ctrl+Shift+X                    //最大化显示当前终端</span><br><span class="line">Ctrl+Shift+Z                    //最大化显示当前终端并使字体放大</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">各个标签之间的操作：</span><br><span class="line">F11                             //全屏开关</span><br><span class="line">Ctrl+Shift+T                    //打开一个新的标签</span><br><span class="line">Ctrl+PageDown                   //移动到下一个标签</span><br><span class="line">Ctrl+PageUp                     //移动到上一个标签</span><br><span class="line">Ctrl+Shift+PageDown             //将当前标签与其后一个标签交换位置</span><br><span class="line">Ctrl+Shift+PageUp               //将当前标签与其前一个标签交换位置</span><br><span class="line">Ctrl+Plus (+)                   //增大字体</span><br><span class="line">Ctrl+Minus (-)                  //减小字体</span><br><span class="line">Ctrl+Zero (0)                   //恢复字体到原始大小</span><br><span class="line">Ctrl+Shift+R                    //重置终端状态</span><br><span class="line">Ctrl+Shift+G                    //重置终端状态并clear屏幕</span><br><span class="line">Super+g                         //绑定所有的终端，以便向一个输入能够输入到所有的终端</span><br><span class="line">Super+Shift+G                   //解除绑定</span><br><span class="line">Super+t                         //绑定当前标签的所有终端，向一个终端输入的内容会自动输入到其他终端</span><br><span class="line">Super+Shift+T                   //解除绑定</span><br><span class="line">Ctrl+Shift+I                    //打开一个窗口，新窗口与原来的窗口使用同一个进程</span><br><span class="line">Super+i                         //打开一个新窗口，新窗口与原来的窗口使用不同的进程</span><br></pre></td></tr></table></figure><h4 id="2-2、VSCode"><a href="#2-2、VSCode" class="headerlink" title="2.2、VSCode"></a><strong>2.2、VSCode</strong></h4><h4 id="2-2-1、vscode下ROS使用基本流程"><a href="#2-2-1、vscode下ROS使用基本流程" class="headerlink" title="2.2.1、vscode下ROS使用基本流程"></a>2.2.1、vscode下ROS使用基本流程</h4><h5 id="1-创建-ROS-工作空间"><a href="#1-创建-ROS-工作空间" class="headerlink" title="1.创建 ROS 工作空间"></a>1.创建 ROS 工作空间</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p xxx_ws/src(必须得有 src)</span><br><span class="line">cd xxx_ws</span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure><h5 id="2-启动-vscode"><a href="#2-启动-vscode" class="headerlink" title="2 启动 vscode"></a>2 启动 vscode</h5><p>进入 xxx_ws 启动 vscode</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd xxx_ws</span><br><span class="line">code .</span><br></pre></td></tr></table></figure><h5 id="3-vscode-中编译-ros"><a href="#3-vscode-中编译-ros" class="headerlink" title="3 vscode 中编译 ros"></a>3 vscode 中编译 ros</h5><p>快捷键 ctrl + shift + B 调用编译，选择:<code>catkin_make:build</code></p><p>可以点击配置设置为默认，修改.vscode/tasks.json 文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="comment">// 有关 tasks.json 格式的文档，请参见</span></span><br><span class="line">    <span class="comment">// https://go.microsoft.com/fwlink/?LinkId=733558</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;2.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;catkin_make:debug&quot;</span>, <span class="comment">//代表提示的描述性信息</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span>,  <span class="comment">//可以选择shell或者process,如果是shell代码是在shell里面运行一个命令，如果是process代表作为一个进程来运行</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;catkin_make&quot;</span>,<span class="comment">//这个是我们需要运行的命令</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span>: [],<span class="comment">//如果需要在命令后面加一些后缀，可以写在这里，比如-DCATKIN_WHITELIST_PACKAGES=“pac1;pac2”</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span>: &#123;<span class="attr">&quot;kind&quot;</span>:<span class="string">&quot;build&quot;</span>,<span class="attr">&quot;isDefault&quot;</span>:<span class="literal">true</span>&#125;,</span><br><span class="line">            <span class="attr">&quot;presentation&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;reveal&quot;</span>: <span class="string">&quot;always&quot;</span><span class="comment">//可选always或者silence，代表是否输出信息</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span>: <span class="string">&quot;$msCompile&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-创建-ROS-功能包"><a href="#4-创建-ROS-功能包" class="headerlink" title="4 .创建 ROS 功能包"></a>4 .创建 ROS 功能包</h5><p>选定 src 右击 —&gt; create catkin package</p><p><strong>设置包名 添加依赖</strong></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225656.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225701.png"></p><h5 id="5-C-实现"><a href="#5-C-实现" class="headerlink" title="5. C++ 实现"></a>5. C++ 实现</h5><p><strong>在功能包的 src 下新建 cpp 文件</strong></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225705.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    控制台输出 HelloVSCode !!!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ros/ros.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">setlocale</span>(LC_ALL,<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="comment">//执行节点初始化</span></span><br><span class="line">    ros::<span class="built_in">init</span>(argc,argv,<span class="string">&quot;HelloVSCode&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出日志</span></span><br><span class="line">    <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Hello VSCode!!!哈哈哈哈哈哈哈哈哈哈&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>安装包后编译无错误</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225710.png"></p><h5 id="6-在src目录下修改CMakeList-txt"><a href="#6-在src目录下修改CMakeList-txt" class="headerlink" title="6.在src目录下修改CMakeList.txt"></a>6.在src目录下修改CMakeList.txt</h5><p>第136行修改为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">136</span>|<span class="built_in">add_executable</span>(hello_vscode_c src/hello_vscode_c.cpp)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225714.png"></p><p>149~151行修改为</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">149</span>| <span class="built_in">target_link_libraries</span>(hello_vscode_c</span><br><span class="line"><span class="number">150</span>|   $&#123;catkin_LIBRARIES&#125;</span><br><span class="line"><span class="number">151</span>| )</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225718.png"></p><h5 id="7-编译"><a href="#7-编译" class="headerlink" title="7.编译"></a>7.编译</h5><p>在vscode下新建终端</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225705.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225726.png"></p><h2 id="三、ROS开发中常用的命令"><a href="#三、ROS开发中常用的命令" class="headerlink" title="三、ROS开发中常用的命令"></a><strong>三、ROS开发中常用的命令</strong></h2><h4 id="3-1、启动命令roscore"><a href="#3-1、启动命令roscore" class="headerlink" title="3.1、启动命令roscore"></a><strong>3.1、启动命令roscore</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br></pre></td></tr></table></figure><blockquote><p>必须运行 roscore 才能使 ROS 节点进行通信；</p><p>roscore 将启动:①、ros master；②、ros 参数服务器；③、rosout 日志节点</p></blockquote><h4 id="3-2、运行命令-rosrun"><a href="#3-2、运行命令-rosrun" class="headerlink" title="3.2、运行命令 rosrun"></a><strong>3.2、运行命令 rosrun</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun 包名 可执行文件名  //运行指定的ROS节点</span><br></pre></td></tr></table></figure><h4 id="3-3、创建新的ROS功能包"><a href="#3-3、创建新的ROS功能包" class="headerlink" title="3.3、创建新的ROS功能包"></a><strong>3.3、创建新的ROS功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">catkin_create_pkg 自定义包名 依赖包</span><br></pre></td></tr></table></figure><h4 id="3-4、安装-ROS功能包"><a href="#3-4、安装-ROS功能包" class="headerlink" title="3.4、安装 ROS功能包"></a><strong>3.4、安装 ROS功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xxx</span><br></pre></td></tr></table></figure><h4 id="3-5、删除某个功能包"><a href="#3-5、删除某个功能包" class="headerlink" title="3.5、删除某个功能包"></a><strong>3.5、删除某个功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt purge xxx</span><br></pre></td></tr></table></figure><h4 id="3-6、列出所有功能包"><a href="#3-6、列出所有功能包" class="headerlink" title="3.6、列出所有功能包"></a><strong>3.6、列出所有功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rospack list</span><br></pre></td></tr></table></figure><h4 id="3-7、查找某个功能包是否存在"><a href="#3-7、查找某个功能包是否存在" class="headerlink" title="3.7、查找某个功能包是否存在"></a><strong>3.7、查找某个功能包是否存在</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rospack find xxx</span><br></pre></td></tr></table></figure><h4 id="3-8、搜索某个功能包"><a href="#3-8、搜索某个功能包" class="headerlink" title="3.8、搜索某个功能包"></a><strong>3.8、搜索某个功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt search xxx</span><br></pre></td></tr></table></figure><h4 id="3-9、进入某个功能包"><a href="#3-9、进入某个功能包" class="headerlink" title="3.9、进入某个功能包"></a><strong>3.9、进入某个功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roscd xxx</span><br></pre></td></tr></table></figure><h4 id="3-10、列出某个包下的文件"><a href="#3-10、列出某个包下的文件" class="headerlink" title="3.10、列出某个包下的文件"></a><strong>3.10、列出某个包下的文件</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosls xxx</span><br></pre></td></tr></table></figure><h4 id="3-11、修改某个功能包文件"><a href="#3-11、修改某个功能包文件" class="headerlink" title="3.11、修改某个功能包文件"></a><strong>3.11、修改某个功能包文件</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosed 包名 文件名</span><br></pre></td></tr></table></figure><h2 id="四、ROS下helloword测试"><a href="#四、ROS下helloword测试" class="headerlink" title="四、ROS下helloword测试"></a><strong>四、ROS下helloword测试</strong></h2><h4 id="4-1、HelloWorld-C-版"><a href="#4-1、HelloWorld-C-版" class="headerlink" title="4.1、HelloWorld(C++版)"></a><strong>4.1、HelloWorld(C++版)</strong></h4><h5 id="1-创建工作空间并初始化"><a href="#1-创建工作空间并初始化" class="headerlink" title="1.创建工作空间并初始化"></a>1.<strong>创建工作空间并初始化</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p 自定义空间名称/src</span><br><span class="line">cd 自定义空间名称</span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure><p>上述命令，首先会创建一个工作空间以及一个 src 子目录，然后再进入工作空间调用 catkin_make命令编译。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225751.png">typora-user-images\image-20211105083002255.png)</p><h5 id="2-进入-src-创建-ros-包并添加依赖"><a href="#2-进入-src-创建-ros-包并添加依赖" class="headerlink" title="2.进入 src 创建 ros 包并添加依赖"></a><strong>2.进入 src 创建 ros 包并添加依赖</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd src</span><br><span class="line">catkin_create_pkg 自定义ROS包名 roscpp rospy std_msgs</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225756.png"></p><p>上述命令，会在工作空间下生成一个功能包，该功能包依赖于 roscpp、rospy 与  std_msgs，其中roscpp是使用C++实现的库，而rospy则是使用python实现的库，std_msgs是标准消息库，创建ROS功能包时，一般都会依赖这三个库实现。</p><p><strong>注意:</strong>  在ROS中，虽然实现同一功能时，C++和Python可以互换，但是具体选择哪种语言，需要视需求而定，因为两种语言相较而言:C++运行效率高但是编码效率低，而Python则反之，基于二者互补的特点，ROS设计者分别设计了roscpp与rospy库，前者旨在成为ROS的高性能库，而后者则一般用于对性能无要求的场景，旨在提高开发效率。</p><p>注意要在自定义的包文件下的src文件下新建C++代码</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225801.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225805.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225809.png"></p><h5 id="3-编辑-ros-包下的-Cmakelist-txt文件"><a href="#3-编辑-ros-包下的-Cmakelist-txt文件" class="headerlink" title="3.编辑 ros 包下的 Cmakelist.txt文件"></a><strong>3.编辑 ros 包下的 Cmakelist.txt文件</strong></h5><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_executable</span>(步骤<span class="number">3</span>的源文件名</span><br><span class="line">  src/步骤<span class="number">3</span>的源文件名.cpp</span><br><span class="line">)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(步骤<span class="number">3</span>的源文件名</span><br><span class="line">  <span class="variable">$&#123;catkin_LIBRARIES&#125;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225814.png"></p><h5 id="5-进入工作空间目录并编译"><a href="#5-进入工作空间目录并编译" class="headerlink" title="5.进入工作空间目录并编译"></a><strong>5.进入工作空间目录并编译</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd 自定义空间名称</span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure><p>生成 build devel ….</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225818.png"></p><h5 id="6-执行"><a href="#6-执行" class="headerlink" title="6.执行"></a><strong>6.执行</strong></h5><p><strong>先启动命令行1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br></pre></td></tr></table></figure><p><strong>再启动命令行2：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd 工作空间</span><br><span class="line">source ./devel/setup.bash</span><br><span class="line">rosrun 包名 C++节点</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225823.png"></p><p>命令行输出: HelloWorld!</p><h4 id="4-2、HelloWorld-python版"><a href="#4-2、HelloWorld-python版" class="headerlink" title="4.2、HelloWorld(python版)"></a><strong>4.2、HelloWorld(python版)</strong></h4>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写博客的意义</title>
      <link href="/2021/11/08/hello_Blog/hello-world/"/>
      <url>/2021/11/08/hello_Blog/hello-world/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/CSDN_51che/src=http---www.mianfeiwendang.com-pic-19484a0c6efc11aab2a7cef732243488c7b81bc4-1-810-jpg_6-1080-0-0-1080.jpg&refer=http---www.mianfeiwendang.jpg"></p><blockquote><p>2021年11月7日创建了这个博客。</p></blockquote><blockquote><h3 id="搭建个人博客和写博客的意义："><a href="#搭建个人博客和写博客的意义：" class="headerlink" title="搭建个人博客和写博客的意义："></a>搭建个人博客和写博客的意义：</h3><p>①、便于以后对知识点的巩固复习；</p><p>②、建立起自己的知识清单；</p><p>③、记录学习中遇到的一些问题；</p><p>④、提高自己的写作能力；</p><p>⑤、为自己以后面试加分；</p><p>⑥、认识很多有意思的朋友；</p><p>⑦、提高阅读量，认识度。</p><p>⑧、在浩瀚无穷的网络世界留下属于我的足迹！</p></blockquote><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/CSDN_51che/src=http---inews.gtimg.com-newsapp_match-0-5577924328-0.jpg&refer=http---inews.gtimg.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
