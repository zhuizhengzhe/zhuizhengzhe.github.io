<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>二、Linux开发常用命令</title>
      <link href="/2021/11/10/Linux/%E4%BA%8C%E3%80%81Linux%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/11/10/Linux/%E4%BA%8C%E3%80%81Linux%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="二、Linux开发常用命令"><a href="#二、Linux开发常用命令" class="headerlink" title="二、Linux开发常用命令"></a>二、Linux开发常用命令</h2><h3 id="2-1、常用的系统工作命令"><a href="#2-1、常用的系统工作命令" class="headerlink" title="2.1、常用的系统工作命令"></a>2.1、常用的系统工作命令</h3><h4 id="1、echo命令"><a href="#1、echo命令" class="headerlink" title="1、echo命令"></a>1、echo命令</h4><p>echo命令用于在终端输出字符串或变量提取后的值，格式为“echo [字符串 | $变量]”。</p><p>使用$变量的方式提取变量SHELL的值，并将其输出到屏幕上：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo $SHELL</span><br><span class="line">输出： /bin/bash</span><br></pre></td></tr></table></figure><h4 id="2、reboot命令"><a href="#2、reboot命令" class="headerlink" title="2、reboot命令"></a>2、reboot命令</h4><p>reboot命令用于重启系统</p><blockquote><p><strong>语法格式：</strong> reboot [参数]  </p></blockquote><p>由于重启计算机这种操作会涉及硬件资源的管理权限，因此默认只能使用root管理员来重启。</p><p><strong>常用参数：</strong></p><table><thead><tr><th>-n</th><th>在重开机前不做将记忆体资料写回硬盘的动作 帮助</th></tr></thead><tbody><tr><td>-w</td><td>并不会真的重开机，只是把记录写到 /var/log/wtmp 档案里</td></tr><tr><td>-d</td><td>不把记录写到 /var/log/wtmp 档案里（-n 这个参数包含了 -d）</td></tr><tr><td>-f</td><td>强迫重开机，不呼叫 shutdown 这个指令</td></tr><tr><td>-i</td><td>在重开机之前先把所有网络相关的装置先停止</td></tr></tbody></table><h4 id="3、poweroff命令"><a href="#3、poweroff命令" class="headerlink" title="3、poweroff命令"></a>3、poweroff命令</h4><p>poweroff命令用于关闭系统</p><blockquote><p><strong>语法格式：</strong>poweroff [参数]</p></blockquote><p>该命令与reboot命令相同，都会涉及硬件资源的管理权限，因此默认只有root管理员才可以关闭电脑。</p><p><strong>常用参数：</strong></p><table><thead><tr><th>-n</th><th>关闭操作系统时不执行sync操作</th></tr></thead><tbody><tr><td>-w</td><td>不真正关闭操作系统，仅在日志文件“/var/log/wtmp”中</td></tr><tr><td>-d</td><td>关闭操作系统时，不将操作写入日志文件“/var/log/wtmp”中添加相应的记录</td></tr><tr><td>-f</td><td>强制关闭操作系统</td></tr><tr><td>-i</td><td>关闭操作系统之前关闭所有的网络接口</td></tr><tr><td>-h</td><td>关闭操作系统之前将系统中所有的硬件设置为备用模式</td></tr></tbody></table><h4 id="4、ps命令"><a href="#4、ps命令" class="headerlink" title="4、ps命令"></a>4、ps命令</h4><p>ps命令用于查看系统中的进程状态，</p><blockquote><p><strong>语法格式：</strong>ps [参数] </p></blockquote><p>该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，总之大部分信息都是可以通过执行该命令得到的。 </p><p><strong>常用参数：</strong>﻿</p><table><thead><tr><th>-a</th><th>显示所有终端机下执行的程序，除了阶段作业领导者之外</th></tr></thead><tbody><tr><td>a</td><td>显示现行终端机下的所有程序，包括其他用户的程序</td></tr><tr><td>-A</td><td>显示所有程序</td></tr><tr><td>-c</td><td>显示CLS和PRI栏位</td></tr><tr><td>c</td><td>列出程序时，显示每个程序真正的指令名称，而不包含路径，选项或常驻服务的标示</td></tr><tr><td>-C &lt;指令名称&gt;</td><td>指定执行指令的名称，并列出该指令的程序的状况</td></tr><tr><td>-d</td><td>显示所有程序，但不包括阶段作业领导者的程序</td></tr><tr><td>-e</td><td>此选项的效果和指定”A”选项相同</td></tr><tr><td>e</td><td>列出程序时，显示每个程序所使用的环境变量</td></tr><tr><td>-f</td><td>显示UID,PPIP,C与STIME栏位</td></tr><tr><td>f</td><td>用ASCII字符显示树状结构，表达程序间的相互关系</td></tr><tr><td>-g &lt;群组名称&gt;</td><td>此选项的效果和指定”-G”选项相同，当亦能使用阶段作业领导者的名称来指定</td></tr><tr><td>g</td><td>显示现行终端机下的所有程序，包括群组领导者的程序</td></tr></tbody></table><h4 id="5、kill命令"><a href="#5、kill命令" class="headerlink" title="5、kill命令"></a>5、kill命令</h4><p>kill命令用于终止某个指定PID的服务进程。</p><blockquote><p><strong>语法格式：</strong>kill [参数] [进程号]</p></blockquote><p><strong>常用参数：</strong></p><table><thead><tr><th>-l</th><th>列出系统支持的信号</th></tr></thead><tbody><tr><td>-s</td><td>指定向进程发送的信号</td></tr><tr><td>-a</td><td>处理当前进程时不限制命令名和进程号的对应关系</td></tr><tr><td>-p</td><td>指定kill命令只打印相关进程的进程号，而不发送任何信号</td></tr></tbody></table><h4 id="6、killall命令"><a href="#6、killall命令" class="headerlink" title="6、killall命令"></a>6、killall命令</h4><p>killall命令用于终止某个指定名称的服务所对应的全部进程，</p><blockquote><p><strong>语法格式：</strong>“killall [参数] [进程名称]”。</p></blockquote><h3 id="2-2、系统状态检测命令"><a href="#2-2、系统状态检测命令" class="headerlink" title="2.2、系统状态检测命令"></a>2.2、系统状态检测命令</h3><h4 id="1．ifconfig命令"><a href="#1．ifconfig命令" class="headerlink" title="1．ifconfig命令"></a>1．ifconfig命令</h4><p>ifconfig命令用于获取网卡配置与网络状态等信息，</p><blockquote><p>格式为“ifconfig [网络设备] [参数]”。</p></blockquote><h4 id="2-uname命令"><a href="#2-uname命令" class="headerlink" title="2.uname命令"></a>2.uname命令</h4><p>uname命令用于查看系统内核与系统版本等信息，</p><blockquote><p><strong>语法格式：</strong>uname [参数] </p></blockquote><p><strong>常用参数：</strong></p><table><thead><tr><th>-a</th><th>显示系统所有相关信息</th></tr></thead><tbody><tr><td>-m</td><td>显示计算机硬件架构</td></tr><tr><td>-n</td><td>显示主机名称</td></tr><tr><td>-r</td><td>显示内核发行版本号</td></tr><tr><td>-s</td><td>显示内核名称</td></tr><tr><td>-v</td><td>显示内核版本</td></tr><tr><td>-p</td><td>显示主机处理器类型</td></tr><tr><td>-o</td><td>显示操作系统名称</td></tr><tr><td>-i</td><td>显示硬件平台</td></tr></tbody></table><p>在使用uname命令时，一般会固定搭配上-a参数来完整地查看当前系统的内核名称、主机名、内核发行版本、节点名、系统时间、硬件名称、硬件平台、处理器类型以及操作系统名称等信息。</p><h3 id="2-3、工作目录切换命令"><a href="#2-3、工作目录切换命令" class="headerlink" title="2.3、工作目录切换命令"></a>2.3、工作目录切换命令</h3><h4 id="1、pwd命令"><a href="#1、pwd命令" class="headerlink" title="1、pwd命令"></a>1、pwd命令</h4><p>pwd命令用于显示用户当前所处的工作目录，</p><blockquote><p><strong>语法格式:</strong> pwd [参数]</p></blockquote><p><strong>常用参数：</strong></p><table><thead><tr><th>-L</th><th>显示逻辑路径</th></tr></thead></table><h4 id="2、cd命令"><a href="#2、cd命令" class="headerlink" title="2、cd命令"></a>2、cd命令</h4><blockquote><p><strong>语法格式：</strong>cd [参数] [目录名] </p></blockquote><p>cd命令用于切换工作路径，格式为“cd [目录名称]”。是最常用的一个Linux命令之一。</p><p>可以通过cd命令迅速、灵活地切换到不同的工作目录。</p><p>除了常见的切换目录方式：</p><blockquote><p>可以使用“cd -”命令返回到上一次所处的目录，</p><p>使用“cd..”命令进入上级目录，</p><p>使用“cd ~”命令切换到当前用户的家目录，</p><p>使用“cd ~username”切换到其他用户的家目录。</p></blockquote><p><strong>常用参数：</strong></p><table><thead><tr><th>-P</th><th>如果切换的目标目录是一个符号链接，则直接切换到符号链接指向的目标目录</th></tr></thead><tbody><tr><td>-L</td><td>如果切换的目标目录是一个符号链接，则直接切换到符号链接名所在的目录</td></tr><tr><td>–</td><td>仅使用”-“选项时，当前目录将被切换到环境变量”OLDPWD”对应值的目录</td></tr><tr><td>~</td><td>切换至当前用户目录</td></tr><tr><td>..</td><td>切换至当前目录位置的上一级目录</td></tr></tbody></table><h4 id="3．ls命令"><a href="#3．ls命令" class="headerlink" title="3．ls命令"></a>3．ls命令</h4><p>ls命令用于显示指定工作目录下的内容及属性信息。</p><blockquote><p><strong>语法格式:</strong> ls [选项] [文件] </p></blockquote><p><strong>常用参数：</strong></p><table><thead><tr><th>-a</th><th>显示所有文件及目录 (包括以“.”开头的隐藏文件)</th></tr></thead><tbody><tr><td>-l</td><td>使用长格式列出文件及目录信息</td></tr><tr><td>-r</td><td>将文件以相反次序显示(默认依英文字母次序)</td></tr><tr><td>-t</td><td>根据最后的修改时间排序</td></tr><tr><td>-A</td><td>同 -a ，但不列出 “.” (当前目录) 及 “..” (父目录)</td></tr><tr><td>-S</td><td>根据文件大小排序</td></tr><tr><td>-R</td><td>递归列出所有子目录</td></tr></tbody></table><h3 id="2-4、文本文件编辑命令"><a href="#2-4、文本文件编辑命令" class="headerlink" title="2.4、文本文件编辑命令"></a>2.4、文本文件编辑命令</h3><h4 id="1、cat命令"><a href="#1、cat命令" class="headerlink" title="1、cat命令"></a>1、cat命令</h4><p>cat命令用于查看纯文本文件（内容较少的）。</p><blockquote><p>**语法格式:**“cat [选项] [文件]”</p></blockquote><p>注意：当文件内容较大时，文本内容会在屏幕上快速闪动（滚屏），用户往往看不清所显示的具体内容。因此对于较长文件内容可以按Ctrl+S键，停止滚屏；以及Ctrl+Q键可以恢复滚屏；而按Ctrl+C（中断）键则可以终止该命令的执行。</p><p><strong>常用参数：</strong></p><table><thead><tr><th>-n</th><th>显示行数（空行也编号）</th></tr></thead><tbody><tr><td>-s</td><td>显示行数（多个空行算一个编号）</td></tr><tr><td>-b</td><td>显示行数（空行不编号）</td></tr><tr><td>-E</td><td>每行结束处显示$符号</td></tr><tr><td>-T</td><td>将TAB字符显示为 ^I符号</td></tr><tr><td>-v</td><td>使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外</td></tr><tr><td>-e</td><td>等价于”-vE”组合</td></tr><tr><td>-t</td><td>等价于”-vT”组合</td></tr><tr><td>-A</td><td>等价于 -vET组合</td></tr><tr><td>–help</td><td>显示帮助信息</td></tr><tr><td>–version</td><td>显示版本信息</td></tr></tbody></table><h4 id="2、more命令-–-显示文本文件内容"><a href="#2、more命令-–-显示文本文件内容" class="headerlink" title="2、more命令 – 显示文本文件内容"></a>2、more命令 – 显示文本文件内容</h4><p>more命令用于将内容较长的文本文件内容（不能在一屏显示完）进行分屏显示，并且支持在显示时定位关键字。而对于内容较少的文本文件内容则推荐使用cat命令查看。</p><blockquote><p><strong>语法格式：</strong>more [参数] [文件] </p></blockquote><p><strong>常用参数：</strong></p><table><thead><tr><th>-num</th><th>指定每屏显示的行数</th></tr></thead><tbody><tr><td>-l</td><td>more在通常情况下把 <strong>^L</strong> 当作特殊字符, 遇到这个字符就会暂停,-l选项可以阻止这种特性</td></tr><tr><td>-f</td><td>计算实际的行数，而非自动换行的行数</td></tr><tr><td>-p</td><td>先清除屏幕再显示文本文件的剩余内容</td></tr><tr><td>-c</td><td>与-p相似，不滚屏，先显示内容再清除旧内容</td></tr><tr><td>-s</td><td>多个空行压缩成一行显示</td></tr><tr><td>-u</td><td>禁止下划线</td></tr><tr><td>+/pattern</td><td>在每个文档显示前搜寻该字(pattern)，然后从该字串之后开始显示</td></tr><tr><td>+num</td><td>从第 num 行开始显示</td></tr></tbody></table><h4 id="3、head命令"><a href="#3、head命令" class="headerlink" title="3、head命令"></a>3、head命令</h4><p>head命令以行为单位，取文件的内容,后面不接参数时默认打印前10行。</p><p><strong>语法格式：</strong>head [参数] [文件]</p><p><strong>常用参数：</strong></p><table><thead><tr><th>-n</th><th>后面接数字，代表显示几行的意思</th></tr></thead><tbody><tr><td>-c</td><td>指定显示头部内容的字符数</td></tr><tr><td>-v</td><td>总是显示文件名的头信息</td></tr><tr><td>-q</td><td>不显示文件名的头信息</td></tr></tbody></table><h3 id="2-5、文件目录管理命令"><a href="#2-5、文件目录管理命令" class="headerlink" title="2.5、文件目录管理命令"></a>2.5、文件目录管理命令</h3><h4 id="1、touch命令"><a href="#1、touch命令" class="headerlink" title="1、touch命令"></a>1、touch命令</h4><p>touch命令用于创建空白文件或设置文件的时间；</p><blockquote><p><strong>语法格式：</strong>touch [参数] [文件]</p></blockquote><p><strong>常用参数：</strong>﻿</p><table><thead><tr><th>-a</th><th>改变档案的读取时间记录</th></tr></thead><tbody><tr><td>-m</td><td>改变档案的修改时间记录</td></tr><tr><td>-r</td><td>使用参考档的时间记录，与 –file 的效果一样</td></tr><tr><td>-c</td><td>不创建新文件</td></tr><tr><td>-d</td><td>设定时间与日期，可以使用各种不同的格式</td></tr><tr><td>-t</td><td>设定档案的时间记录，格式与 date 命令相同</td></tr><tr><td>–no-create</td><td>不创建新文件</td></tr><tr><td>–help</td><td>显示帮助信息</td></tr><tr><td>–version</td><td>列出版本讯息</td></tr></tbody></table><h4 id="2、mkdir命令"><a href="#2、mkdir命令" class="headerlink" title="2、mkdir命令"></a>2、mkdir命令</h4><p>mkdir命令用于创建空白的目录；</p><p><strong>语法格式 :</strong> mkdir [参数] [目录] </p><p><strong>常用参数：</strong></p><table><thead><tr><th>-p</th><th>递归创建多级目录</th></tr></thead><tbody><tr><td>-m</td><td>建立目录的同时设置目录的权限</td></tr><tr><td>-z</td><td>设置安全上下文</td></tr><tr><td>-v</td><td>显示目录的创建过程</td></tr></tbody></table><p>在工作目录下，建立一个名为 dir 的子目录： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linuxcool ~]# mkdir dir</span><br></pre></td></tr></table></figure><p> 在目录/usr/linuxcool下建立子目录dir，并且设置文件属主有读、写和执行权限，其他人无权访问 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linuxcool ~]# mkdir -m 700 /usr/linuxcool/dir</span><br></pre></td></tr></table></figure><h4 id="3、cp命令"><a href="#3、cp命令" class="headerlink" title="3、cp命令"></a>3、cp命令</h4><p>cp命令可以将多个文件复制到一个具体的文件名或一个已经存在的目录下，也可以同时复制多个文件到一个指定的目录中。</p><p><strong>语法格式：</strong>cp [参数] [文件] </p><p><strong>常用参数：</strong></p><table><thead><tr><th>-f</th><th>若目标文件已存在，则会直接覆盖原文件</th></tr></thead><tbody><tr><td>-i</td><td>若目标文件已存在，则会询问是否覆盖</td></tr><tr><td>-p</td><td>保留源文件或目录的所有属性</td></tr><tr><td>-r</td><td>递归复制文件和目录</td></tr><tr><td>-d</td><td>当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接的原始文件或目录</td></tr><tr><td>-l</td><td>对源文件建立硬连接，而非复制文件</td></tr><tr><td>-s</td><td>对源文件建立符号连接，而非复制文件</td></tr><tr><td>-b</td><td>覆盖已存在的文件目标前将目标文件备份</td></tr><tr><td>-v</td><td>详细显示cp命令执行的操作过程</td></tr><tr><td>-a</td><td>等价于“dpr”选项</td></tr></tbody></table><p>例如： 交互式地将目录 /usr/linuxcool 中的所有.c文件复制到目录 dir 中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linuxcool ~]# cp -r /usr/linuxcool/*.c dir</span><br></pre></td></tr></table></figure><h4 id="4、mv命令"><a href="#4、mv命令" class="headerlink" title="4、mv命令"></a>4、mv命令</h4><p>mv命令用于剪切文件或将文件重命名，mv与cp的结果不同。mv命令好像文件“搬家”，文件名称发生改变，但个数并未增加。而cp命令是对文件进行复制操作，文件个数是有增加的。</p><blockquote><p><strong>语法格式：</strong>mv [参数]</p></blockquote><p><strong>常用参数：</strong></p><table><thead><tr><th>-i</th><th>若存在同名文件，则向用户询问是否覆盖</th></tr></thead><tbody><tr><td>-f</td><td>覆盖已有文件时，不进行任何提示</td></tr><tr><td>-b</td><td>当文件存在时，覆盖前为其创建一个备份</td></tr><tr><td>-u</td><td>当源文件比目标文件新，或者目标文件不存在时，才执行移动此操作</td></tr></tbody></table><h4 id="5、rm命令"><a href="#5、rm命令" class="headerlink" title="5、rm命令"></a>5、rm命令</h4><p>rm命令用于删除文件或目录，格式为“rm [选项]文件”。</p><p><strong>语法格式：</strong>rm [参数] [文件]</p><p><strong>常用参数：</strong></p><table><thead><tr><th>-f</th><th>忽略不存在的文件，不会出现警告信息</th></tr></thead><tbody><tr><td>-i</td><td>删除前会询问用户是否操作</td></tr><tr><td>-r/R</td><td>递归删除</td></tr><tr><td>-v</td><td>显示指令的详细执行过程</td></tr></tbody></table><p>直接删除，不会有任何提示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linuxcool ~]# rm -f test.txt.bz2  </span><br></pre></td></tr></table></figure><p>递归删除目录及目录下所有文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@linuxcool ~]# mkdir /data/log</span><br><span class="line">[root@linuxcool ~]# rm -rf /data/log</span><br></pre></td></tr></table></figure><p>删除当前目录下所有文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linuxcool ~]# rm -rf *</span><br></pre></td></tr></table></figure><h3 id="2-6、打包压缩与搜索命令"><a href="#2-6、打包压缩与搜索命令" class="headerlink" title="2.6、打包压缩与搜索命令"></a>2.6、打包压缩与搜索命令</h3><h4 id="1．tar命令"><a href="#1．tar命令" class="headerlink" title="1．tar命令"></a>1．tar命令</h4><p>tar命令用于对文件进行打包压缩或解压，</p><blockquote><p><strong>语法格式：</strong>tar [参数] [文件或目录]</p></blockquote><p><strong>常用参数：</strong></p><table><thead><tr><th>-A</th><th>新增文件到以存在的备份文件</th></tr></thead><tbody><tr><td>-B</td><td>设置区块大小</td></tr><tr><td>-c</td><td>建立新的备份文件</td></tr><tr><td>-C &lt;目录&gt;</td><td>切换工作目录，先进入指定目录再执行压缩/解压缩操作，可用于仅压缩特定目录里的内容或解压缩到特定目录</td></tr><tr><td>-d</td><td>记录文件的差别</td></tr><tr><td>-x</td><td>从归档文件中提取文件</td></tr><tr><td>-t</td><td>列出备份文件的内容</td></tr><tr><td>-z</td><td>通过gzip指令压缩/解压缩文件，文件名最好为*.tar.gz</td></tr><tr><td>-Z</td><td>通过compress指令处理备份文件</td></tr><tr><td>-f&lt;备份文件&gt;</td><td>指定备份文件</td></tr><tr><td>-v</td><td>显示指令执行过程</td></tr><tr><td>-r</td><td>添加文件到已经压缩的文件</td></tr><tr><td>-u</td><td>添加改变了和现有的文件到已经存在的压缩文件</td></tr><tr><td>-j</td><td>通过bzip2指令压缩/解压缩文件，文件名最好为*.tar.bz2</td></tr><tr><td>-v</td><td>显示操作过程</td></tr><tr><td>-l</td><td>文件系统边界设置</td></tr><tr><td>-k</td><td>保留原有文件不覆盖</td></tr><tr><td>-m</td><td>保留文件不被覆盖</td></tr><tr><td>-w</td><td>确认压缩文件的正确性</td></tr><tr><td>-p</td><td>保留原来的文件权限与属性</td></tr><tr><td>-P</td><td>使用文件名的绝对路径，不移除文件名称前的“/”号</td></tr><tr><td>-N &lt;日期格式&gt;</td><td>只将较指定日期更新的文件保存到备份文件里</td></tr><tr><td>– -exclude=&lt;范本样式&gt;</td><td>排除符合范本样式的文件</td></tr><tr><td>– -remove-files</td><td>归档/压缩之后删除源文件</td></tr></tbody></table><p>把指定的文件进行打包压缩：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar-czvf压缩包名称．tar.gz要打包的目录</span><br></pre></td></tr></table></figure><p>解压命令为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf压缩包名称．tar.gz</span><br></pre></td></tr></table></figure><h4 id="2、grep命令"><a href="#2、grep命令" class="headerlink" title="2、grep命令"></a>2、grep命令</h4><p> 强大的文本搜索工具，grep命令的选项用于对搜索过程的补充，而其命令的模式十分灵活，可以是变量、字符串、正则表达式。</p><p>需要注意的是：一当模式中包含了空格，务必要用双引号将其引起来。</p><p><strong>语法格式：</strong> grep [参数]</p><p><strong>常用参数：</strong></p><table><thead><tr><th>-i</th><th>搜索时，忽略大小写</th></tr></thead><tbody><tr><td>-c</td><td>只输出匹配行的数量</td></tr><tr><td>-l</td><td>只列出符合匹配的文件名，不列出具体的匹配行</td></tr><tr><td>-n</td><td>列出所有的匹配行，显示行号</td></tr><tr><td>-h</td><td>查询多文件时不显示文件名</td></tr><tr><td>-s</td><td>不显示不存在、没有匹配文本的错误信息</td></tr><tr><td>-v</td><td>显示不包含匹配文本的所有行</td></tr><tr><td>-w</td><td>匹配整词</td></tr><tr><td>-x</td><td>匹配整行</td></tr><tr><td>-r</td><td>递归搜索</td></tr><tr><td>-q</td><td>禁止输出任何结果，已退出状态表示搜索是否成功</td></tr><tr><td>-b</td><td>打印匹配行距文件头部的偏移量，以字节为单位</td></tr><tr><td>-o</td><td>与-b结合使用，打印匹配的词据文件头部的偏移量，以字节为单位</td></tr></tbody></table><h3 id="2-7、用户身份与文件权限"><a href="#2-7、用户身份与文件权限" class="headerlink" title="2.7、用户身份与文件权限"></a>2.7、用户身份与文件权限</h3><h4 id="1、sudo-切换用户执行身份命令"><a href="#1、sudo-切换用户执行身份命令" class="headerlink" title="1、sudo 切换用户执行身份命令"></a>1、sudo 切换用户执行身份命令</h4><p>sudo 是一种权限管理机制，管理员可以授权于一些普通用户去执行一些 root 执行的操作，而不需要知道 root 的密码。</p><blockquote><p><strong>语法格式：</strong>sudo [参数]</p></blockquote><p><strong>常用参数：</strong></p><table><thead><tr><th>-v</th><th>因为 sudo 在第一次执行时或是在 N分钟内没有执行（N 预设为五）会问密码，这个参数是重新做一次确认，如果超过N分钟，也会问密码</th></tr></thead><tbody><tr><td>-k</td><td>强迫使用者在下一次执行 sudo 时问密码（不论有没有超过 N 分钟）</td></tr><tr><td>-b</td><td>将要执行的指令放在背景执行</td></tr><tr><td>-p</td><td>prompt 可以更改问密码的提示语，其中 %u 会代换为使用者的帐号名称，%h 会显示主机名称</td></tr><tr><td>-s</td><td>执行环境变数中的SHELL 所指定的shell ，或是 /etc/passwd 里所指定的 shell</td></tr><tr><td>command</td><td>要以系统管理者身份（或以 -u 更改为其他人）执行的指令</td></tr></tbody></table><h4 id="2、adduser-添加用户命令"><a href="#2、adduser-添加用户命令" class="headerlink" title="2、adduser 添加用户命令"></a>2、adduser 添加用户命令</h4><p>该命令用于新增使用者帐号或更新预设的使用者资料。adduser 与 useradd 指令为同一指令（经由符号连结 symbolic link）</p><blockquote><p><strong>语法格式：</strong>adduser [参数] </p></blockquote><p><strong>常用参数：</strong></p><table><thead><tr><th>-c</th><th>加上备注文件，备注文字会存储在 passwd 的备注参数中</th></tr></thead><tbody><tr><td>-d</td><td>指定用户登录时的起始目录</td></tr><tr><td>-D</td><td>变更默认值</td></tr><tr><td>-e</td><td>设定此帐号的使用期限（格式为 YYYY-MM-DD），预设值为永久有效</td></tr><tr><td>-f &lt;缓冲天数&gt;</td><td>指定在密码过期后多少天即关闭该帐号</td></tr><tr><td>-g &lt;群组&gt;</td><td>指定用户所属的群组</td></tr><tr><td>-G &lt;群组&gt;</td><td>指定用户所属的附加群组</td></tr><tr><td>-m</td><td>自动建立用户的登入目录</td></tr><tr><td>-M</td><td>不要自动建立用户的登入目录</td></tr><tr><td>-n</td><td>取消建立以用户名称为名的群组</td></tr><tr><td>-r</td><td>建立系统帐号</td></tr><tr><td>-s <shell></td><td>指定用户登入后所使用的shell</td></tr><tr><td>-u <uid></td><td>指定用户ID</td></tr></tbody></table><h4 id="3、deluser-删除用户命令"><a href="#3、deluser-删除用户命令" class="headerlink" title="3、deluser  删除用户命令"></a>3、deluser  删除用户命令</h4><p>deluser命令用于删除用户。将一个用户从一个组中删除（即退出用户组）</p><blockquote><p><strong>语法格式：</strong>deluser [参数] </p></blockquote><p><strong>常用参数：</strong></p><table><thead><tr><th>–remove-all-files</th><th>删除用户拥有的所有文件</th></tr></thead><tbody><tr><td>–remove-home</td><td>删除用户的主目录和邮件后台处理程序</td></tr><tr><td>–backup-to</td><td>目标目录进行备份</td></tr><tr><td>–system</td><td>只有系统用户才能删除</td></tr></tbody></table><h4 id="4、su-切换用户命令"><a href="#4、su-切换用户命令" class="headerlink" title="4、su  切换用户命令"></a>4、su  切换用户命令</h4><p>su命令用于切换当前用户身份到指定用户或者以指定用户的身份执行命令或程序。 </p><p>普通用户切换到root用户，可以使用su – 或su root,但是必须输入root密码才能完成切换。root用户切换到普通用户，可以使用su username,不需要输入任何密码即可完成切换。</p><p><strong>语法格式:</strong> su [选项] [用户名]</p><p><strong>常用参数：</strong></p><table><thead><tr><th>-c或–command</th><th>执行完指定的指令后，即恢复原来的身份</th></tr></thead><tbody><tr><td>-f或–fast</td><td>适用于csh与tsch，使shell不用去读取启动文件</td></tr><tr><td>-l或–login</td><td>改变身份时，也同时变更工作目录，以及HOME,SHELL,USER,logname,此外，也会变更PATH变量</td></tr><tr><td>-m,-p或–preserve-environment</td><td>变更身份时，不要变更环境变量</td></tr><tr><td>-s或–shell</td><td>指定要执行的shell</td></tr><tr><td>–help</td><td>显示帮助信息</td></tr><tr><td>–version</td><td>显示版本信息</td></tr></tbody></table><p>切换到linuxcool用户，并改变为linuxcool用户环境变量：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linuxcool ~]# su - linuxcool  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无人驾驶-感知层-传感器（一）——激光雷达</title>
      <link href="/2021/11/10/%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE%E5%8F%8ASLAM/%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6-%E6%84%9F%E7%9F%A5%E5%B1%82-%E4%BC%A0%E6%84%9F%E5%99%A8%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE/"/>
      <url>/2021/11/10/%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE%E5%8F%8ASLAM/%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6-%E6%84%9F%E7%9F%A5%E5%B1%82-%E4%BC%A0%E6%84%9F%E5%99%A8%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE/</url>
      
        <content type="html"><![CDATA[<h3 id="无人驾驶-感知层-传感器（一）——激光雷达"><a href="#无人驾驶-感知层-传感器（一）——激光雷达" class="headerlink" title="无人驾驶-感知层-传感器（一）——激光雷达"></a>无人驾驶-感知层-传感器（一）——激光雷达</h3><h4 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h4><p>2021年最火爆的技术毫无疑问是无人驾驶技术，而无人驾驶技术里面竞争最激烈的便是激光雷达，蔚来1个、小鹏2个、北汽极狐αS2个、威马3个…智能汽车“军备竞赛”正在上演。那我们来看看激光雷达它为什么这么备受青睐。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE%E5%8E%9F%E7%90%86/image-20211101164030415.png"></p><p><strong>激光雷达</strong>：LiDAR<strong>（</strong>Light Detection and Ranging），是以发射激光束探测目标的位置、速度等特征量的雷达系统。近年来在机器人、无人驾驶领域得到了广泛的应用。</p><h4 id="2、原理"><a href="#2、原理" class="headerlink" title="2、原理"></a>2、原理</h4><p>工作原理是向目标发射探测信号(激光束）,然后将接收到的从目标反射回来的信号（目标回波）与发射信号进行比较,作适当处理后,就可获得目标的有关信息,如目标距离、方位、高度、速度、姿态、甚至形状等参数,从而对车辆、行人等目标进行探测、跟踪和识别。可以通过三角法测距或者TOF测距计算出激光雷达与物体的距离。因此对应有三角测距激光雷达和TOF测距激光雷达。</p><h5 id="2-1、三角测距激光雷达"><a href="#2-1、三角测距激光雷达" class="headerlink" title="2.1、三角测距激光雷达"></a>2.1、三角测距激光雷达</h5><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE%E5%8E%9F%E7%90%86/pIYBAGBvxlyAOmXDAABy6qDFssI146.png"></p><p>基本原理如上图所示。雷达测距模块向外发射<a href="http://www.elecfans.com/tags/%E7%BA%A2%E5%A4%96/">红外</a>激光，入射到被测物体上之后，部分散射光经接收透镜汇聚到线阵<a href="http://www.elecfans.com/tags/%E5%9B%BE%E5%83%8F%E4%BC%A0%E6%84%9F%E5%99%A8/">图像传感器</a>（CCD/CMOS）上成像。</p><p>由图中的几何关系可知，位于不同距离的物体，出射激光形成的光斑在线阵上成像的位置亦不相同；另一方面，测距模块的内部结构固定不变，接收透镜的焦距f，以及发射光路光轴与接收透镜主光轴之间的偏移（即基<a href="http://www.hqpcb.com/zhuoluye11/?tid=26&plan=fashaoyou">线距</a>离）L这两项参数都是已知的。根据三角形的相似关系，即可计算出物体的距离D如下：</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE%E5%8E%9F%E7%90%86/pIYBAGBvxlyAA1UwAAAGWnHapLU487.png"></p><p>以上原理介绍为最简化的情况。但在实际应用中，为了提高距离分辨率，以及充分利用线阵图像传感器的像素资源，通常将发射光路光轴与接收透镜主光轴布置为呈一定斜角（而非图示中的平行关系），但相似三角形的基本原理并无变化。</p><p><strong>影响三角测距激光雷达精度的参数：距离分辨率和测量速率。</strong></p><p><strong>距离分辨率：</strong>就是对不同距离目标的区分能力，相当于用尺子量长度时，使用的尺子的最小刻度是多少，三角测距的一大特点是这把“尺子”的刻度是不均匀的。对于比较近的距离区间，目标距离的变化会引起成像点位置的显著变化；而当目标位于远处时，即便距离发生很大的变化，体现到成像点上只会产生一点点移动，也就是说，三角测距的距离分辨率会随着距离的变远而急速下降。</p><p><strong>测量速率：</strong>机械式单线激光雷达在旋转扫描的同时对不同方向上的目标进行测距，因此测量速率直接决定了雷达能否以更快的速率扫描（对应更高的帧率），以及在完成一周扫描时能否输出更多的测量点（对应更高的角度分辨率）。为了达到一定的距离分辨率，三角测距激光雷达往往都会使用较高分辨率的线阵图像传感器，通常具有数千个像素点，每次测距时需要将这些像素点的灰度值读出并交给 DSP 处理，整个读出和处理的过程需要耗费一定时间，从而限制了三角测距激光雷达的数据速率。</p><h5 id="2-1、TOF测距激光雷达"><a href="#2-1、TOF测距激光雷达" class="headerlink" title="2.1、TOF测距激光雷达"></a>2.1、TOF测距激光雷达</h5><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE%E5%8E%9F%E7%90%86/pIYBAGBvxlyAcQkxAAB7AJCWE7A480.png"></p><p>​    </p><p><strong>原理：</strong>①、开始测距时，脉冲驱动<a href="http://www.hqpcb.com/">电路</a>驱动激光器发射一个持续时间极短但瞬时功率非常高的光脉冲，同时<a href="http://www.hqchip.com/app/1045">计时</a>单元启动计时；</p><p>​            ②、光脉冲经发射光路出射后，到达被测物体的表面并向各方向散射。测距模块的接收光路收到部分散射光能量，通过光电器件转化为光电流，输送给回波信号处理电路；</p><p>​            ③、回波信号处理电路将光电流转化为电压信号，经过一级或数级放大并调理后，得到一个回波信号对应的电脉冲，用于触发计时单元停止计时；</p><p>​            ④、此时，计时单元记录的时间间隔就代表了激光脉冲从发射到返回的全程所用的时间，使用这个时间值乘以光速并除以2，即可得到测距单元与被测目标之间的距离值。</p><p>ToF测距的原理很容易理解，但具体工程实现时有不少技术难点需要解决，这主要是由于ToF测距的工作条件比较极端，非常大（脉冲发射峰值）、非常弱（脉冲回波）和非常快（纳秒/皮秒级别）的信号，这就对整个电路的驱动能力、带宽和噪声抑制水平提出了很高的要求。但它的优势在于，只要解决了上述这些问题，整个测距系统可以实现非常高的性能。</p><h4 id="3、优点"><a href="#3、优点" class="headerlink" title="3、优点"></a>3、优点</h4><p>①、具有极高的分辨率：激光雷达工作于光学波段，频率比微波高2~3个数量级以上，与微波雷达相比，激光雷达具有极高的分辨率、角分辨率和速度分辨率；</p><p>②、抗干扰能力强:激光波长短，可发散角非常小的激光束，多路径效应小（不会形成定向发射于微波或毫米波产生多路径效应），可探测低空/超低空目标；</p><p>③、获取的信息量丰富：可直接获取目标的距离、角度、反射强度、速度等信息，生成目标对位图像；</p><p>④、可全天候工作：激光主动探测，不依赖于外界光照条件或目标本身的辐射特性。它只需发射自己的激光束，通过探测发射激光束的回波信号来获取目标信息。</p><h4 id="4、缺点"><a href="#4、缺点" class="headerlink" title="4、缺点"></a>4、缺点</h4><p>①、成本：激光雷达的成本是限定无人驾驶落地的原因之一；</p><p>②、应用坏境：易受天气影响（如大雾、雨天、烟尘会影响激光雷达精度）；</p><p>③、属性识别能力较弱：激光雷达的点云数据是物体的几何外形呈现，无法如同人眼视觉一样分辨物体的物理特性，如颜色、纹理等。</p><h4 id="5、分类"><a href="#5、分类" class="headerlink" title="5、分类"></a>5、分类</h4><p>①、根据线束多少，激光雷达可分为单线束和多线束（2线、4线、8线、16线、32线、64线、128线，2的倍速）。</p><p>单线束激光雷达扫描一次只能产生一条扫描线，所获得的数据为2D数据，无法区别有关物体的3D信息；多线束激光雷达可将多个横向扫描结果纵向叠加，从而获取3D数据，线束越多，纵向的垂直视角越大，价格越贵。</p><p>②、按照扫描方式，激光雷达主要分为三类：</p><p>一是光机结构整体旋转的<strong>机械式激光雷达</strong>（以Velydone公司为代表），在此基础上衍生出了收发模块不动的棱镜或转镜的激光雷达（如Livox览沃）；</p><p>二是<strong>半固态激光雷达</strong>，主要采用<strong>MEMS微振镜</strong>（Luminar/Innoviz等品牌）；</p><p>三是<strong>固态激光雷达</strong>，又分为了<strong>电子扫描</strong>或者<strong>整体曝光Flash面阵</strong>（Leddar/Ibeo/Ouster），以及<strong>基于光学相控的OPA方式</strong>（Quanergy/Lumotive），当前市场主流正朝着MEMS方向发展。</p><h4 id="6、公司"><a href="#6、公司" class="headerlink" title="6、公司"></a>6、公司</h4><p><strong>速腾聚创</strong>、华为、<strong>Livox</strong>、<strong>图达通 Innovusion</strong>、禾赛科技、镭神智能</p><h4 id="7、应用"><a href="#7、应用" class="headerlink" title="7、应用"></a>7、应用</h4><blockquote><p>参考：<a href="http://www.elecfans.com/d/1566850.html">http://www.elecfans.com/d/1566850.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 激光雷达-SLAM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 激光雷达-SLAM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1、PicGo+Gitee搭建图床</title>
      <link href="/2021/11/10/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/1%E3%80%81PicGo+gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/2021/11/10/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/1%E3%80%81PicGo+gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="1、PicGo-Gitee搭建图床"><a href="#1、PicGo-Gitee搭建图床" class="headerlink" title="1、PicGo+Gitee搭建图床"></a>1、PicGo+Gitee搭建图床</h2><h3 id="1-1、新建仓库"><a href="#1-1、新建仓库" class="headerlink" title="1.1、新建仓库"></a>1.1、新建仓库</h3><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110125935.png"></p><h3 id="1-2、配置仓库"><a href="#1-2、配置仓库" class="headerlink" title="1.2、配置仓库"></a>1.2、配置仓库</h3><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110125941.png"></p><h3 id="1-3、生成密钥"><a href="#1-3、生成密钥" class="headerlink" title="1.3、生成密钥"></a>1.3、生成密钥</h3><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110125945.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110130007.png"></p><p>这个密钥一定要保存好，之后就显示不了了</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110130239.png"></p><h2 id="2、下载PigGo软件"><a href="#2、下载PigGo软件" class="headerlink" title="2、下载PigGo软件"></a>2、下载PigGo软件</h2><h3 id="2-1、下载连接"><a href="#2-1、下载连接" class="headerlink" title="2.1、下载连接"></a>2.1、下载连接</h3><blockquote><p><a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p></blockquote><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110130012.png"></p><p>然后直接安装。。。</p><h3 id="2-2、下载gitee插件"><a href="#2-2、下载gitee插件" class="headerlink" title="2.2、下载gitee插件"></a>2.2、下载gitee插件</h3><p><strong>注意：一定要以管理员身份运行后在安装！，不然会一直安装不了！</strong></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110130016.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110130019.png"></p><h3 id="2-3、搭建图床"><a href="#2-3、搭建图床" class="headerlink" title="2.3、搭建图床"></a>2.3、搭建图床</h3><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110132304.png"></p><p>可以把其它不用的图床关闭</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110132308.png"></p><h3 id="2-4、上传"><a href="#2-4、上传" class="headerlink" title="2.4、上传"></a>2.4、上传</h3><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110130955.png"></p><p>显示</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Typroa+Picgo+Gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/20211110131000.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思岚SLAMTEC A1开箱测试</title>
      <link href="/2021/11/10/%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE%E5%8F%8ASLAM/%E4%B8%80%E3%80%81%E6%80%9D%E5%B2%9ASLAMTEC%20A1%E5%BC%80%E7%AE%B1%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/11/10/%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE%E5%8F%8ASLAM/%E4%B8%80%E3%80%81%E6%80%9D%E5%B2%9ASLAMTEC%20A1%E5%BC%80%E7%AE%B1%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h3 id="思岚SLAMTEC-A1开箱测试"><a href="#思岚SLAMTEC-A1开箱测试" class="headerlink" title="思岚SLAMTEC A1开箱测试"></a>思岚SLAMTEC A1开箱测试</h3><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%80%9D%E5%B2%9ASLAMTECA1%E5%BC%80%E7%AE%B1%E6%B5%8B%E8%AF%95/20211110120319.png"></p><h4 id="一、测试坏境"><a href="#一、测试坏境" class="headerlink" title="一、测试坏境"></a>一、测试坏境</h4><p>①、SLAMTEC A1激光雷达；</p><p>②、Ubuntu16.04 下 ROS Kinetic。</p><h4 id="二、测试功能"><a href="#二、测试功能" class="headerlink" title="二、测试功能"></a>二、测试功能</h4><p>①、运行ROS包，查看雷达数据</p><p>②、使用hector_slam进行建图</p><h4 id="三、具体实现过程"><a href="#三、具体实现过程" class="headerlink" title="三、具体实现过程"></a>三、具体实现过程</h4><p>1、建立ROS工作空间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/dev/catkin_ws/src</span><br></pre></td></tr></table></figure><p>进入src文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/dev/catkin_ws/src</span><br></pre></td></tr></table></figure><p>初始化工作空间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">catkin_init_workspace</span><br></pre></td></tr></table></figure><p>在src文件中创建了一个 CMakeLists.txt 的文件，告诉系统ROS的工作空间。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%80%9D%E5%B2%9ASLAMTECA1%E5%BC%80%E7%AE%B1%E6%B5%8B%E8%AF%95/20211110120332.png"></p><p>2、下载ROS相关的功能包</p><p>在src目录下 下载SLAMTEC的激光雷达ROS包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Slamtec/rplidar_ros.git</span><br></pre></td></tr></table></figure><p>下载Hector_SLAM建图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/tu-darmstadt-ros-pkg/hector_slam.git</span><br></pre></td></tr></table></figure><p>3、在工作空间中编译</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/dev/catkin_ws/</span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure><p>添加环境变量source</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/dev/catkin_ws/devel/setup.bash</span><br></pre></td></tr></table></figure><p>(为了让source永久生效，应该写入.bashrc文件中）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo&quot;source~/dev/catkin_ws/devel/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br><span class="line"></span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>4、驱动安装</p><p>源码安装 rplidar-ros 雷达驱动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-kinetic-rplidar-ros</span><br></pre></td></tr></table></figure><p>源码安装 hector_slam库</p><pre><code>sudo apt-get install ros-kinetic-hector-slam</code></pre><p>在rplidar_ros中新建slam.launch文件<strong>（非常重要，不然会报错）</strong></p><p>在rplidar_ros/launch/目录下添加slam.launch文件:</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%80%9D%E5%B2%9ASLAMTECA1%E5%BC%80%E7%AE%B1%E6%B5%8B%E8%AF%95/20211110120337.png"></p><p>slam.launch文件中复制如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;node pkg=&quot;hector_mapping&quot; type=&quot;hector_mapping&quot; name=&quot;hector_mapping&quot; output=&quot;screen&quot;&gt;</span><br><span class="line">&lt;!-- Frame names --&gt;</span><br><span class="line">&lt;param name=&quot;pub_map_odom_transform&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">&lt;param name=&quot;map_frame&quot; value=&quot;map&quot; /&gt;</span><br><span class="line">&lt;param name=&quot;base_frame&quot; value=&quot;base_link&quot; /&gt;</span><br><span class="line">&lt;param name=&quot;odom_frame&quot; value=&quot;base_link&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- Tf use --&gt;</span><br><span class="line">&lt;param name=&quot;use_tf_scan_transformation&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">&lt;param name=&quot;use_tf_pose_start_estimate&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- Map size / start point --&gt;</span><br><span class="line">&lt;param name=&quot;map_resolution&quot; value=&quot;0.05&quot;/&gt;</span><br><span class="line">&lt;param name=&quot;map_size&quot; value=&quot;2048&quot;/&gt;</span><br><span class="line">&lt;param name=&quot;map_start_x&quot; value=&quot;0.5&quot;/&gt;</span><br><span class="line">&lt;param name=&quot;map_start_y&quot; value=&quot;0.5&quot; /&gt;</span><br><span class="line">&lt;param name=&quot;laser_z_min_value&quot; value = &quot;-1.0&quot; /&gt;</span><br><span class="line">&lt;param name=&quot;laser_z_max_value&quot; value = &quot;1.0&quot; /&gt;</span><br><span class="line">&lt;param name=&quot;map_multi_res_levels&quot; value=&quot;2&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;param name=&quot;map_pub_period&quot; value=&quot;2&quot; /&gt;</span><br><span class="line">&lt;param name=&quot;laser_min_dist&quot; value=&quot;0.4&quot; /&gt;</span><br><span class="line">&lt;param name=&quot;laser_max_dist&quot; value=&quot;5.5&quot; /&gt;</span><br><span class="line">&lt;param name=&quot;output_timing&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">&lt;param name=&quot;pub_map_scanmatch_transform&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;!--&lt;param name=&quot;tf_map_scanmatch_transform_frame_name&quot; value=&quot;scanmatcher_frame&quot; /&gt;--&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- Map update parameters --&gt;</span><br><span class="line">&lt;param name=&quot;update_factor_free&quot; value=&quot;0.4&quot;/&gt;</span><br><span class="line">&lt;param name=&quot;update_factor_occupied&quot; value=&quot;0.7&quot; /&gt;    </span><br><span class="line">&lt;param name=&quot;map_update_distance_thresh&quot; value=&quot;0.2&quot;/&gt;</span><br><span class="line">&lt;param name=&quot;map_update_angle_thresh&quot; value=&quot;0.06&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- Advertising config --&gt; </span><br><span class="line">&lt;param name=&quot;advertise_map_service&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">&lt;param name=&quot;scan_subscriber_queue_size&quot; value=&quot;5&quot;/&gt;</span><br><span class="line">&lt;param name=&quot;scan_topic&quot; value=&quot;scan&quot;/&gt;</span><br><span class="line">&lt;/node&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;node pkg=&quot;tf&quot; type=&quot;static_transform_publisher&quot; name=&quot;base_to_laser_broadcaster&quot; args=&quot;0 0 0 0 0 0 /base_link /laser 100&quot;/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;node pkg=&quot;rviz&quot; type=&quot;rviz&quot; name=&quot;rviz&quot;</span><br><span class="line">    args=&quot;-d $(find hector_slam_launch)/rviz_cfg/mapping_demo.rviz&quot;/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/launch&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5、连接雷达</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%80%9D%E5%B2%9ASLAMTECA1%E5%BC%80%E7%AE%B1%E6%B5%8B%E8%AF%95/20211110120343.png"></p><p>雷达连接好后会出现usb串口<br>查看usb串口及权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /dev |grep ttyUSB</span><br></pre></td></tr></table></figure><p>对应的文件号应该是ttyUSB0<br>给串口文件号ttyUSB0添加写权限为：666  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 666 /dev/ttyUSB0</span><br></pre></td></tr></table></figure><p>6、使用rviz雷达数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br><span class="line">roslaunch rplidar_ros view_rplidar.launch</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%80%9D%E5%B2%9ASLAMTECA1%E5%BC%80%E7%AE%B1%E6%B5%8B%E8%AF%95/20211110120348.png"></p><p>7、在终端查看雷达数据</p><p>启动ros主节点以及启动激光雷达</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br><span class="line">roslaunch rplidar_ros rplidar.launch</span><br></pre></td></tr></table></figure><p>启动rplidarNodeClient节点，在终端查看数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun rplidar_ros rplidarNodeClient</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%80%9D%E5%B2%9ASLAMTECA1%E5%BC%80%E7%AE%B1%E6%B5%8B%E8%AF%95/20211110120354.png"></p><p>8、使用Hector_SLAM建图</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br><span class="line">roslaunch rplidar_ros slam.launch</span><br></pre></td></tr></table></figure><p>如果出现如下报错</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%80%9D%E5%B2%9ASLAMTECA1%E5%BC%80%E7%AE%B1%E6%B5%8B%E8%AF%95/20211110120359.png"></p><p>进入到rplidar_ws目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/rplidar_ws</span><br><span class="line">source devel/setup.bash</span><br><span class="line">roslaunch rplidar_ros slam.launch</span><br></pre></td></tr></table></figure><p>一定要切换rplidar_ws到此目录下在启动命令；</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/%E6%80%9D%E5%B2%9ASLAMTECA1%E5%BC%80%E7%AE%B1%E6%B5%8B%E8%AF%95/20211110120403.png"></p><p>9、保存slam得到的地图信息<br>先安装map_server包；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-kinetic-map-server</span><br></pre></td></tr></table></figure><p>然后，保存图形。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun map_server map_saver -f ~/my_map</span><br></pre></td></tr></table></figure><h4 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h4><p>进入roscoore,有时会使用CTRL+Z误操作关闭了ROS进程；</p><p>解决方案： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">killall -9 roscore</span><br><span class="line"></span><br><span class="line">killall -9 rosmaster</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://blog.csdn.net/NouriXiiX/article/details/102690064">https://blog.csdn.net/NouriXiiX/article/details/102690064</a></p><p>​            <a href="https://blog.csdn.net/t624124600/article/details/110723844">https://blog.csdn.net/t624124600/article/details/110723844</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 激光雷达-SLAM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 激光雷达-SLAM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FileZilla连接阿里云服务器</title>
      <link href="/2021/11/10/%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/FileZilla%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2021/11/10/%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/FileZilla%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="FileZilla连接阿里云服务器"><a href="#FileZilla连接阿里云服务器" class="headerlink" title="FileZilla连接阿里云服务器"></a>FileZilla连接阿里云服务器</h3><blockquote><p>目的：可以更好的管理云文件</p></blockquote><p>设置</p><p>在远程服务器端通过指令vim /etc/ssh/sshd_config开放22号端口</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/FileZilla%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/20211110100635.png"></p><p>设置云服务器的安全组ID，添加20/21</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/FileZilla%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/20211110100640.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/FileZilla%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/20211110100643.png"></p><p>然后启动FileZilla，新建站点，设置SFTP、公网地址（主机）、root账号（用户名）、密码、填写22端口进行连接。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/FileZilla%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/20211110100646.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/FileZilla%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/20211110100650.png"></p>]]></content>
      
      
      <categories>
          
          <category> 问题及解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题及解决方案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一、Matlab快速绘制栅格地图</title>
      <link href="/2021/11/09/%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E4%B8%80%E3%80%81Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/"/>
      <url>/2021/11/09/%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E4%B8%80%E3%80%81Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Matlab快速绘制栅格地图"><a href="#一、Matlab快速绘制栅格地图" class="headerlink" title="一、Matlab快速绘制栅格地图"></a>一、Matlab快速绘制栅格地图</h2><blockquote><p>声明：本文是学习古月居~基于栅格地图的机器人路径规划算法指南• 黎万洪](<a href="https://class.guyuehome.com/detail/p_6098db8ce4b071a81eb8befa/6)%E5%90%8E%E5%86%99%E7%9A%84%E7%AC%94%E8%AE%B0%EF%BC%8C%E5%A5%BD%E8%AE%B0%E6%80%A7%E4%B8%8D%E5%A6%82%E7%83%82%E7%AC%94%E5%A4%B4%EF%BC%81%E6%96%B9%E4%BE%BF%E6%97%A5%E5%90%8E%E7%9A%84%E5%B7%A9%E5%9B%BA%E4%B8%8E%E5%A4%8D%E4%B9%A0%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%95%99%E7%A8%8B%E8%AE%B2%E7%9A%84%E5%BE%88%E9%AB%98%EF%BC%8C%E5%80%BC%E5%BE%97%E6%8E%A8%E8%8D%90%EF%BC%81">https://class.guyuehome.com/detail/p_6098db8ce4b071a81eb8befa/6)后写的笔记，好记性不如烂笔头！方便日后的巩固与复习，这个教程讲的很高，值得推荐！</a></p></blockquote><h3 id="1、几种常用的地图形式："><a href="#1、几种常用的地图形式：" class="headerlink" title="1、几种常用的地图形式："></a>1、几种常用的地图形式：</h3><h4 id="1-1、尺度地图："><a href="#1-1、尺度地图：" class="headerlink" title="1.1、尺度地图："></a>1.1、尺度地图：</h4><p>具有真实的物理尺度，如：栅格地图、特征地图、点云地图，常用于地图构建、定位、SLAM、小规模路径规划。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109230749.png"></p><h4 id="1-2、拓扑地图："><a href="#1-2、拓扑地图：" class="headerlink" title="1.2、拓扑地图："></a>1.2、拓扑地图：</h4><p>不具备真实的物理尺度，只表示不同地点的连接关系和距离，如铁路网。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109224555.png"></p><h4 id="1-3、语义地图："><a href="#1-3、语义地图：" class="headerlink" title="1.3、语义地图："></a>1.3、语义地图：</h4><p>加标签的尺度地图，常用于人机交互。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109224559.png"></p><h3 id="2、栅格地图用于路径规划的优势："><a href="#2、栅格地图用于路径规划的优势：" class="headerlink" title="2、栅格地图用于路径规划的优势："></a>2、栅格地图用于路径规划的优势：</h3><blockquote><p>①、可以将任意形状轮廓的地图，用足够精细的栅格进行绘制；</p><p>②、每一个栅格，可以通过不同颜色表示不同含义，如黑色代表障碍物、黄色代表起点、红色代表终点；</p><p>③、基于栅格地图进行路径规划有横、纵、斜三个规划方向。对应室内低速机器人可以完全按照路径行走；对于中高速机器人，可以考虑将路径进行平滑处理，以适用于非完全约束系统。</p></blockquote><h3 id="3、matlab绘制栅格地图的核心函数及思想："><a href="#3、matlab绘制栅格地图的核心函数及思想：" class="headerlink" title="3、matlab绘制栅格地图的核心函数及思想："></a>3、matlab绘制栅格地图的核心函数及思想：</h3><h4 id="3-1、colormap函数："><a href="#3-1、colormap函数：" class="headerlink" title="3.1、colormap函数："></a>3.1、colormap函数：</h4><blockquote><p>为栅格地图创建自定义颜色。如黄色栅格代表起点、红色为终点。</p></blockquote><h4 id="3-2、sub2ind函数："><a href="#3-2、sub2ind函数：" class="headerlink" title="3.2、sub2ind函数："></a>3.2、sub2ind函数：</h4><p>将行列索引转为线性索引。对于右图栅格地图，10行1列，行从左上角自上而下排序，列从左上角自左向右排序。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109224604.png"></p><h4 id="3-3、ind2sub函数："><a href="#3-3、ind2sub函数：" class="headerlink" title="3.3、ind2sub函数："></a>3.3、ind2sub函数：</h4><blockquote><p>与sub2ind相反，是将线性索引转为行列索引。</p></blockquote><h4 id="3-4、为了在栅格地图呈现随机障碍物的效果，可以设置障碍物出现频率数值，根据该数据在所有栅格中生成随机数，从而确定障碍物栅格。"><a href="#3-4、为了在栅格地图呈现随机障碍物的效果，可以设置障碍物出现频率数值，根据该数据在所有栅格中生成随机数，从而确定障碍物栅格。" class="headerlink" title="3.4、为了在栅格地图呈现随机障碍物的效果，可以设置障碍物出现频率数值，根据该数据在所有栅格中生成随机数，从而确定障碍物栅格。"></a>3.4、为了在栅格地图呈现随机障碍物的效果，可以设置障碍物出现频率数值，根据该数据在所有栅格中生成随机数，从而确定障碍物栅格。</h4><h4 id="3-5、image函数："><a href="#3-5、image函数：" class="headerlink" title="3.5、image函数："></a>3.5、image函数：</h4><p>利用colormap建立的颜色图，将数组信息显示为图像。</p><h3 id="4、具体例子："><a href="#4、具体例子：" class="headerlink" title="4、具体例子："></a>4、具体例子：</h3><h3 id="4-1、利用Matlab快速绘制栅格地图matlab代码："><a href="#4-1、利用Matlab快速绘制栅格地图matlab代码：" class="headerlink" title="4.1、利用Matlab快速绘制栅格地图matlab代码："></a>4.1、利用Matlab快速绘制栅格地图matlab代码：</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">close all</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 构建颜色MAP图</span></span><br><span class="line">cmap = [<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>; ...       <span class="comment">% 1-白色-空地</span></span><br><span class="line">    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>; ...           <span class="comment">% 2-黑色-静态障碍</span></span><br><span class="line">    <span class="number">1</span> <span class="number">0</span> <span class="number">0</span>; ...           <span class="comment">% 3-红色-动态障碍</span></span><br><span class="line">    <span class="number">1</span> <span class="number">1</span> <span class="number">0</span>;...            <span class="comment">% 4-黄色-起始点 </span></span><br><span class="line">    <span class="number">1</span> <span class="number">0</span> <span class="number">1</span>;...            <span class="comment">% 5-品红-目标点</span></span><br><span class="line">    <span class="number">0</span> <span class="number">1</span> <span class="number">0</span>; ...           <span class="comment">% 6-绿色-到目标点的规划路径   </span></span><br><span class="line">    <span class="number">0</span> <span class="number">1</span> <span class="number">1</span>];              <span class="comment">% 7-青色-动态规划的路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 构建颜色MAP图</span></span><br><span class="line">colormap(cmap);</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 构建栅格地图场景</span></span><br><span class="line"><span class="comment">% 栅格界面大小:行数和列数</span></span><br><span class="line">rows = <span class="number">10</span>;</span><br><span class="line">cols = <span class="number">10</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">% 定义栅格地图全域，并初始化空白区域</span></span><br><span class="line">field = <span class="built_in">ones</span>(rows, cols);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 障碍物区域</span></span><br><span class="line">obsRate = <span class="number">0.3</span>;</span><br><span class="line">obsNum = <span class="built_in">floor</span>(rows*cols*obsRate);</span><br><span class="line">obsIndex = randi([<span class="number">1</span>,rows*cols],obsNum,<span class="number">1</span>);</span><br><span class="line">field(obsIndex) = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 起始点和目标点</span></span><br><span class="line">startPos = <span class="number">2</span>;</span><br><span class="line">goalPos = rows*cols<span class="number">-2</span>;</span><br><span class="line">field(startPos) = <span class="number">4</span>;</span><br><span class="line">field(goalPos) = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 画栅格图</span></span><br><span class="line">image(<span class="number">1.5</span>,<span class="number">1.5</span>,field);</span><br><span class="line">grid on;</span><br><span class="line">set(gca,<span class="string">&#x27;gridline&#x27;</span>,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;gridcolor&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;linewidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;GridAlpha&#x27;</span>,<span class="number">0.5</span>);</span><br><span class="line">set(gca,<span class="string">&#x27;xtick&#x27;</span>,<span class="number">1</span>:cols+<span class="number">1</span>,<span class="string">&#x27;ytick&#x27;</span>,<span class="number">1</span>:rows+<span class="number">1</span>);</span><br><span class="line">axis image;</span><br></pre></td></tr></table></figure><h3 id="4-2、运行结构："><a href="#4-2、运行结构：" class="headerlink" title="4.2、运行结构："></a>4.2、运行结构：</h3><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109224610.png"></p><h3 id="4-3、具体分析"><a href="#4-3、具体分析" class="headerlink" title="4.3、具体分析"></a>4.3、具体分析</h3><p>1、</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">close all</span><br></pre></td></tr></table></figure><blockquote><p>clc：清除命令窗口的内容，对工作环境中的全部变量无任何影响<br>close：关闭当前的Figure窗口<br>close all:关闭所有的Figure窗口<br>clear：清除工作空间的所有变量<br>clear all：清除工作空间的所有变量，函数，和MEX文件</p></blockquote><p>2、自定义构建颜色MAP图</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 构建颜色MAP图</span></span><br><span class="line">cmap = [<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>; ...       <span class="comment">% 1-白色-空地</span></span><br><span class="line">    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>; ...           <span class="comment">% 2-黑色-静态障碍</span></span><br><span class="line">    <span class="number">1</span> <span class="number">0</span> <span class="number">0</span>; ...           <span class="comment">% 3-红色-动态障碍</span></span><br><span class="line">    <span class="number">1</span> <span class="number">1</span> <span class="number">0</span>;...            <span class="comment">% 4-黄色-起始点 </span></span><br><span class="line">    <span class="number">1</span> <span class="number">0</span> <span class="number">1</span>;...            <span class="comment">% 5-品红-目标点</span></span><br><span class="line">    <span class="number">0</span> <span class="number">1</span> <span class="number">0</span>; ...           <span class="comment">% 6-绿色-到目标点的规划路径   </span></span><br><span class="line">    <span class="number">0</span> <span class="number">1</span> <span class="number">1</span>];              <span class="comment">% 7-青色-动态规划的路径</span></span><br></pre></td></tr></table></figure><p>运行后会建立对应变量的MAP图值</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109224616.png"></p><p>3、colormap构建颜色MAP图</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 构建颜色MAP图</span></span><br><span class="line">colormap(cmap);</span><br></pre></td></tr></table></figure><p>4、构建栅格地图场景：大小</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 构建栅格地图场景</span></span><br><span class="line"><span class="comment">% 栅格界面大小:行数和列数</span></span><br><span class="line">rows = <span class="number">10</span>;</span><br><span class="line">cols = <span class="number">10</span>; </span><br></pre></td></tr></table></figure><p>5、定义栅格地图全域，并初始化空白区域</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 定义栅格地图全域，并初始化空白区域</span></span><br><span class="line">field = <span class="built_in">ones</span>(rows, cols);</span><br></pre></td></tr></table></figure><p>将栅格图全设置为白色</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109224620.png"></p><p>6、障碍物区域</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 障碍物区域</span></span><br><span class="line">obsRate = <span class="number">0.3</span>;</span><br><span class="line">obsNum = <span class="built_in">floor</span>(rows*cols*obsRate);</span><br><span class="line">obsIndex = randi([<span class="number">1</span>,rows*cols],obsNum,<span class="number">1</span>);</span><br><span class="line">field(obsIndex) = <span class="number">2</span>;</span><br></pre></td></tr></table></figure><blockquote><p>obsRate = 0.3;%障碍物占比率</p><p>obsNum = floor(rows<em>cols</em>obsRate);%计算障碍物个数；</p><p>obsIndex = randi([1,rows*cols],obsNum,1);%随机设置障碍物</p></blockquote><p>得到障碍物的区域</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109224624.png"></p><p>7、起始点和目标点</p><p>起始点和目标点要定义在障碍物后面，不然可能会和障碍物冲突</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 起始点和目标点</span></span><br><span class="line">startPos = <span class="number">2</span>;</span><br><span class="line">goalPos = rows*cols<span class="number">-2</span>;</span><br><span class="line">field(startPos) = <span class="number">4</span>;</span><br><span class="line">field(goalPos) = <span class="number">5</span>;</span><br></pre></td></tr></table></figure><blockquote><p>startPos = 2; &amp;起点<br>goalPos = rows*cols-2;%终点<br>field(startPos) = 4; %起点为黄色<br>field(goalPos) = 5; %终点为红色</p></blockquote><p>8、画栅格图</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 画栅格图</span></span><br><span class="line">image(<span class="number">1.5</span>,<span class="number">1.5</span>,field);</span><br><span class="line">grid on;</span><br><span class="line">set(gca,<span class="string">&#x27;gridline&#x27;</span>,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;gridcolor&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;linewidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;GridAlpha&#x27;</span>,<span class="number">0.5</span>);</span><br><span class="line">set(gca,<span class="string">&#x27;xtick&#x27;</span>,<span class="number">1</span>:cols+<span class="number">1</span>,<span class="string">&#x27;ytick&#x27;</span>,<span class="number">1</span>:rows+<span class="number">1</span>);</span><br><span class="line">axis image;</span><br></pre></td></tr></table></figure><blockquote><p>image(1.5,1.5,field);%画出颜色图</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109224629.png"></p><p>grid on;% 画出网格</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109224633.png"></p><p>set(gca,’gridline’,’-‘,’gridcolor’,’k’,’linewidth’,2,’GridAlpha’,0.5); % 设置网格为：网格线<del>实线、颜色</del>黑色、线宽<del>2、透明度</del>0.5；</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109224637.png"></p><p>set(gca,’xtick’,1:cols+1,’ytick’,1:rows+1); % 设置长宽高为一样~正方形<br>axis image;</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab%E5%BF%AB%E9%80%9F%E7%BB%98%E5%88%B6%E6%A0%85%E6%A0%BC%E5%9C%B0%E5%9B%BE/20211109224642.png"></p></blockquote><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> 路径规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路径规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git使用过程中遇到的问题（一）：push fail</title>
      <link href="/2021/11/09/git/Git%20push%E5%88%B0%E4%BB%93%E5%BA%93%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9AFailed%20to%20connect%20to%20github.com%20port%20443%20Timed%20out/"/>
      <url>/2021/11/09/git/Git%20push%E5%88%B0%E4%BB%93%E5%BA%93%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9AFailed%20to%20connect%20to%20github.com%20port%20443%20Timed%20out/</url>
      
        <content type="html"><![CDATA[<h2 id="Git-push到仓库过程中遇到的问题（一）：Failed-to-connect-to-github-com-port-443-Timed-out"><a href="#Git-push到仓库过程中遇到的问题（一）：Failed-to-connect-to-github-com-port-443-Timed-out" class="headerlink" title="Git push到仓库过程中遇到的问题（一）：Failed to connect to github.com port 443: Timed out"></a>Git push到仓库过程中遇到的问题（一）：Failed to connect to github.com port 443: Timed out</h2><blockquote><p>声明：本文是记录了自己在使用git过程中遇到push到GitHub仓库失败的问题后的解决过程，为以后复习！</p></blockquote><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Git%E4%BD%BF%E7%94%A8/20211109202128.png"></p><h3 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h3><p><strong>1、打开windos设置，进入网络和Internet</strong></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Git%E4%BD%BF%E7%94%A8/20211109202750.png"></p><p><strong>2、点击代理，关闭自动检测设置</strong></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Git%E4%BD%BF%E7%94%A8/20211109202055.png"></p><p><strong>3、重新push</strong></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Git%E4%BD%BF%E7%94%A8/20211109202109.png"></p><p><strong>上传成功</strong></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Git%E4%BD%BF%E7%94%A8/20211109202215.png"></p><h3 id="解决方案二"><a href="#解决方案二" class="headerlink" title="解决方案二"></a>解决方案二</h3><p><strong>使用命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br></pre></td></tr></table></figure><p><strong>直接设置不使用代理</strong></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一、STM32CubeMX安装</title>
      <link href="/2021/11/09/STM32/STM32CubeMX/STM32CubeMX%E5%AE%89%E8%A3%85/"/>
      <url>/2021/11/09/STM32/STM32CubeMX/STM32CubeMX%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="STM32CubeMX安装"><a href="#STM32CubeMX安装" class="headerlink" title="STM32CubeMX安装"></a>STM32CubeMX安装</h3><h4 id="1、STM32CubeMX介绍"><a href="#1、STM32CubeMX介绍" class="headerlink" title="1、STM32CubeMX介绍"></a>1、STM32CubeMX介绍</h4><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image.PF259242.en.feature-description-include-personalized-no-cpn-large.jpg"></p><p>​    STM32CubeMX是ST公司主动原创的一款代码生成工具， 它可以减轻开发时间和费用。STM32CubeMX集成了一个全面的软件平台，支持STM32每一个系列的MCU开发。这个平台 包括 STM32Cube HAL（一个 STM32 的抽象层集成软件，确保 STM32 系列最大的移植性），再加上兼容的一套中间件 （RTOS、USB、TCP/IP 和图形）。所有内嵌软件组件附带了全套例程。 </p><h4 id="2、软件坏境安装"><a href="#2、软件坏境安装" class="headerlink" title="2、软件坏境安装"></a>2、软件坏境安装</h4><p>STM32CubeMX软件是基于java环境运行的，所以需要安装JRE才能使用。 </p><p>STM32CubeMX要求JRE最低版本是1.7.0_45，所以最好使用教新的版本，JAVA官方网址为：<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a> ，安装完成后配置好Java环境变量 。</p><h4 id="3、STM32CubeMX软件下载"><a href="#3、STM32CubeMX软件下载" class="headerlink" title="3、STM32CubeMX软件下载"></a>3、STM32CubeMX软件下载</h4><p>软件获取方式： </p><p>①、 ST官网：工具和软件→开发工具→Software Development Tools→STM32CubeMX→GET SOFTWARE </p><p>官网下载地址链接：<a href="https://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-configurators-and-code-generators/stm32cubemx.html">https://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-configurators-and-code-generators/stm32cubemx.html</a></p><p>②、从官网下载需要注册ST账号，所以我已经将软件下载好放在百度云盘，需要的关注公众号《Kevin的嵌入式学习站》，后台回复“STM32CubeMX”。</p><h4 id="4、安装步骤"><a href="#4、安装步骤" class="headerlink" title="4、安装步骤"></a>4、安装步骤</h4><p>①、解压安装包后，点击SetupSTM32CubeMX-4.27.0，以管理员权限运行</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102225307384.png"></p><p>②、安装步骤</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102230354486.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102230429236.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102230539190.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102230608865.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102230637341.png"></p><p>安装完成后可以在桌面打开STM32CubeMX</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102230737383.png"></p><p>安装对应的支持包，因为支持包比较大，所以最好更改一下默认安装路径，<strong>但切记不能出现中文路径</strong></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102230825288.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102231049976.png"></p><p>安装支持包</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102231122078.png"></p><p>安装自己开发所需要的支持包，如我需要如下安装包</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102231229774.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102231324494.png"></p><p>当然也可以提前下好支持包，然后再导入到软件中</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102231640286.png"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/STM32CubeMX%E5%AE%89%E8%A3%85/image-20211102231756636.png"></p><p>到此安装结束，<strong>值得注意的是安装坏境不要出现中文环境，不然后期开发会报错！</strong></p>]]></content>
      
      
      <categories>
          
          <category> STM32CubeMX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM32CubeMX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三、ROS开发中常用的命令</title>
      <link href="/2021/11/09/ROS/%E4%B8%89%E3%80%81ROS%E5%BC%80%E5%8F%91%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/11/09/ROS/%E4%B8%89%E3%80%81ROS%E5%BC%80%E5%8F%91%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="三、ROS开发中常用的命令"><a href="#三、ROS开发中常用的命令" class="headerlink" title="三、ROS开发中常用的命令"></a><strong>三、ROS开发中常用的命令</strong></h2><h4 id="3-1、启动命令roscore"><a href="#3-1、启动命令roscore" class="headerlink" title="3.1、启动命令roscore"></a><strong>3.1、启动命令roscore</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br></pre></td></tr></table></figure><blockquote><p>必须运行 roscore 才能使 ROS 节点进行通信；</p><p>roscore 将启动:①、ros master；②、ros 参数服务器；③、rosout 日志节点</p></blockquote><h4 id="3-2、运行命令-rosrun"><a href="#3-2、运行命令-rosrun" class="headerlink" title="3.2、运行命令 rosrun"></a><strong>3.2、运行命令 rosrun</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun 包名 可执行文件名  //运行指定的ROS节点</span><br></pre></td></tr></table></figure><h4 id="3-3、创建新的ROS功能包"><a href="#3-3、创建新的ROS功能包" class="headerlink" title="3.3、创建新的ROS功能包"></a><strong>3.3、创建新的ROS功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">catkin_create_pkg 自定义包名 依赖包</span><br></pre></td></tr></table></figure><h4 id="3-4、安装-ROS功能包"><a href="#3-4、安装-ROS功能包" class="headerlink" title="3.4、安装 ROS功能包"></a><strong>3.4、安装 ROS功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xxx</span><br></pre></td></tr></table></figure><h4 id="3-5、删除某个功能包"><a href="#3-5、删除某个功能包" class="headerlink" title="3.5、删除某个功能包"></a><strong>3.5、删除某个功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt purge xxx</span><br></pre></td></tr></table></figure><h4 id="3-6、列出所有功能包"><a href="#3-6、列出所有功能包" class="headerlink" title="3.6、列出所有功能包"></a><strong>3.6、列出所有功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rospack list</span><br></pre></td></tr></table></figure><h4 id="3-7、查找某个功能包是否存在"><a href="#3-7、查找某个功能包是否存在" class="headerlink" title="3.7、查找某个功能包是否存在"></a><strong>3.7、查找某个功能包是否存在</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rospack find xxx</span><br></pre></td></tr></table></figure><h4 id="3-8、搜索某个功能包"><a href="#3-8、搜索某个功能包" class="headerlink" title="3.8、搜索某个功能包"></a><strong>3.8、搜索某个功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt search xxx</span><br></pre></td></tr></table></figure><h4 id="3-9、进入某个功能包"><a href="#3-9、进入某个功能包" class="headerlink" title="3.9、进入某个功能包"></a><strong>3.9、进入某个功能包</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roscd xxx</span><br></pre></td></tr></table></figure><h4 id="3-10、列出某个包下的文件"><a href="#3-10、列出某个包下的文件" class="headerlink" title="3.10、列出某个包下的文件"></a><strong>3.10、列出某个包下的文件</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosls xxx</span><br></pre></td></tr></table></figure><h4 id="3-11、修改某个功能包文件"><a href="#3-11、修改某个功能包文件" class="headerlink" title="3.11、修改某个功能包文件"></a><strong>3.11、修改某个功能包文件</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosed 包名 文件名</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一、Ubuntu下ROS 的安装和测试</title>
      <link href="/2021/11/09/ROS/%E4%B8%80%E3%80%81Ubuntu%E4%B8%8BROS%20%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/11/09/ROS/%E4%B8%80%E3%80%81Ubuntu%E4%B8%8BROS%20%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Ubuntu下ROS-的安装和测试"><a href="#一、Ubuntu下ROS-的安装和测试" class="headerlink" title="一、Ubuntu下ROS 的安装和测试"></a><strong>一、Ubuntu下ROS 的安装和测试</strong></h2><h4 id="1-1、在Ubuntu下选择合适的ROS版本"><a href="#1-1、在Ubuntu下选择合适的ROS版本" class="headerlink" title="1.1、在Ubuntu下选择合适的ROS版本"></a><strong>1.1、在Ubuntu下选择合适的ROS版本</strong></h4><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225548.png"></p><p>根据自己的Ubuntu坏境选择ROS版本，建议安装最新版本。</p><h4 id="1-2、配置ubuntu的软件和更新"><a href="#1-2、配置ubuntu的软件和更新" class="headerlink" title="1.2、配置ubuntu的软件和更新"></a><strong>1.2、配置ubuntu的软件和更新</strong></h4><p>配置ubuntu的软件和更新，允许安装不经认证的软件。</p><p>首先打开“软件和更新”对话框，具体可以在 Ubuntu 搜索按钮中搜索。</p><p>打开后按照下图进行配置（确保勾选了”restricted”， “universe，” 和 “multiverse.”）</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225554.png"></p><h4 id="1-3、设置安装源"><a href="#1-3、设置安装源" class="headerlink" title="1.3、设置安装源"></a><strong>1.3、设置安装源</strong></h4><p>官方默认安装源:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c &#x27;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br></pre></td></tr></table></figure><p>或来自国内清华的安装源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c &#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br></pre></td></tr></table></figure><p>或来自国内中科大的安装源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c &#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://m</span><br></pre></td></tr></table></figure><p><strong>尽量使用国内安装源，安装的数度会快一些</strong></p><h4 id="1-4、设置key"><a href="#1-4、设置key" class="headerlink" title="1.4、设置key"></a><strong>1.4、设置key</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver &#x27;hkp://keyserver.ubuntu</span><br></pre></td></tr></table></figure><p>若无法连接到密钥服务器，可以尝试替换上面命令中的 <code>hkp://keyserver.ubuntu.com:80</code> 为 <code>hkp://pgp.mit.edu:80</code> 。 </p><p>也可以使用curl命令替换apt-key命令，这在使用代理服务器的情况下比较有用： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL &#x27;http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654&#x27; | sudo apt-key add -</span><br></pre></td></tr></table></figure><h4 id="1-5、安装ROS"><a href="#1-5、安装ROS" class="headerlink" title="1.5、安装ROS"></a><strong>1.5、安装ROS</strong></h4><p>①、使用以下命令，确保Ubuntu软件包索引是最新的： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>②、安装完整桌面版的ROS，完整版包含了 ROS、<a href="http://wiki.ros.org/rqt">rqt</a>、<a href="http://wiki.ros.org/rviz">rviz</a>、机器人通用库、2D/3D 模拟器、导航以及 2D/3D 感知包。</p><p><strong>Ubuntu16.04下安装ROS Kinetic Kame 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-kinetic-desktop-full</span><br></pre></td></tr></table></figure><p><strong>Ubuntu18.04下安装ROS Melodic 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ros-melodic-desktop-full</span><br></pre></td></tr></table></figure><p><strong>Ubuntu20.04下安装ROS Noetic 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ros-noetic-desktop-full</span><br></pre></td></tr></table></figure><p>出现错误</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225602.png"></p><p>重复多次安装一下，可能是因为网络的原因。</p><h4 id="1-6、配置ROS坏境"><a href="#1-6、配置ROS坏境" class="headerlink" title="1.6、配置ROS坏境"></a><strong>1.6、配置ROS坏境</strong></h4><p>配置环境变量，方便在任意 终端中使用 ROS。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;source /opt/ros/noetic/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="1-7、ROS卸载"><a href="#1-7、ROS卸载" class="headerlink" title="1.7、ROS卸载"></a><strong>1.7、ROS卸载</strong></h4><p>如果需要卸载ROS可以调用如下命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove ros-noetic-*</span><br></pre></td></tr></table></figure><h4 id="1-8、初始化-rosdep"><a href="#1-8、初始化-rosdep" class="headerlink" title="1.8、初始化 rosdep"></a><strong>1.8、初始化 rosdep</strong></h4><p>在使用 ROS 之前，需要初始化 <code>rosdep</code>。<code>rosdep</code> 能够轻松地安装被想要编译的源代码，或被某些 ROS 核心组件需要的系统依赖。</p><p>避免后面出现sudo rosdep：找不到命令提示，需要执行如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-rosdep</span><br></pre></td></tr></table></figure><p> 初始化rosdep</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rosdep init</span><br><span class="line">rosdep update</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225608.png"></p><p>但是，在 rosdep 初始化时，多半会抛出异常。</p><p><strong>问题:</strong></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225615.png"></p><p><strong>原因:</strong></p><p>境外资源被屏蔽。</p><p><strong>解决:</strong></p><p>百度或google搜索，解决方式有多种(<a href="https://github.com/ros/rosdistro/issues/9721)%EF%BC%8C%E5%8F%AF%E6%83%9C%E5%9C%A8">https://github.com/ros/rosdistro/issues/9721)，可惜在</a> ubuntu20.04 下，集体失效。</p><p>新思路:<em>将相关资源备份到 gitee,修改 rosdep 源码,重新定位资源。</em></p><p><strong>实现:</strong></p><p>1.先打开资源备份路径:<a href="https://gitee.com/zhao-xuzuo/rosdistro%EF%BC%8C%E6%89%93%E5%BC%80">https://gitee.com/zhao-xuzuo/rosdistro，打开</a> rosdistro/<strong>rosdep</strong>/<strong>sources.list.d</strong>/<strong>20-default.list</strong>文件留作备用(主要是复用URL的部分内容:gitee.com/zhao-xuzuo/rosdistro/raw/master)。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225620.png"></p><p>2.进入”/usr/lib/python3/dist-packages/“ 查找rosdep中和<code>raw.githubusercontent.com</code>相关的内容，调用命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -type f | xargs grep &quot;raw.githubusercontent&quot;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225625.png"></p><p>3.修改相关文件，主要有: ./rosdistro/<strong>init</strong>.py、./rosdep2/gbpdistro_support.py、./rosdep2/sources_list.py 、./rosdep2/rep3.py。可以使用<code>sudo gedit</code>命令修改文件:</p><p>文件中涉及的 URL 内容，如果是:<code>raw.githubusercontent.com/ros/rosdistro/master</code>都替换成步骤1中准备的<code>gitee.com/zhao-xuzuo/rosdistro/raw/master</code>即可。</p><p>修改完毕，再重新执行命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rosdep init</span><br><span class="line">rosdep update</span><br></pre></td></tr></table></figure><p>就可以正常实现 rosdep 的初始化与更新了。</p><h4 id="1-9、测试-ROS——运行小海龟"><a href="#1-9、测试-ROS——运行小海龟" class="headerlink" title="1.9、测试 ROS——运行小海龟"></a><strong>1.9、测试 ROS——运行小海龟</strong></h4><ol><li><p>首先启动三个终端(ctrl + alt + T)</p></li><li><p>第一个终端运行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br></pre></td></tr></table></figure></li><li><p>第二个终端运行命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun turtlesim turtlesim_node</span><br></pre></td></tr></table></figure><p>此时会弹出图形化界面</p></li><li><p>第三个终端运行命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun turtlesim turtle_teleop_key</span><br></pre></td></tr></table></figure><p>在3中可以通过上下左右控制2中乌龟的运动</p></li></ol><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/ROS/20211108225632.png"></p><p><strong>注：</strong></p><p>有时候下载任务不小心被 CTRL+Z暂停了</p><p>使用： jobs 命令查看已有进程 使用fg %x恢复执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fg %x</span><br></pre></td></tr></table></figure><p> 参考文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/qq_44830040/article/details/106049992</span><br><span class="line">https://blog.csdn.net/weixin_43159148/article/details/83375218</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四、MATLAB程序流程控制语句</title>
      <link href="/2021/11/09/matlab/%E5%9B%9B%E3%80%81MATLAB%E7%A8%8B%E5%BA%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/"/>
      <url>/2021/11/09/matlab/%E5%9B%9B%E3%80%81MATLAB%E7%A8%8B%E5%BA%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="四、MATLAB程序流程控制语句"><a href="#四、MATLAB程序流程控制语句" class="headerlink" title="四、MATLAB程序流程控制语句"></a>四、MATLAB程序流程控制语句</h2><blockquote><p><strong>声明：</strong><br>笔记是学习慕课网《科学计算与MATLAB语言》课程和刘卫国主编的《MATLAB程序设计与应用（第3版）》后的个人总结，方便自己以后巩固和复习！</p></blockquote><h3 id="4-1-M文件"><a href="#4-1-M文件" class="headerlink" title="4.1  M文件"></a>4.1  M文件</h3><h4 id="4-1-1-M文件的建立与打开"><a href="#4-1-1-M文件的建立与打开" class="headerlink" title="4.1.1  M文件的建立与打开"></a>4.1.1  M文件的建立与打开</h4><p>M文件是一个文本文件，它可以用任何编辑程序来建立和编辑，而一般常用且最为方便的是使用MATLAB提供的文本编辑器。</p><h5 id="1．建立新的M文件"><a href="#1．建立新的M文件" class="headerlink" title="1．建立新的M文件"></a>1．建立新的M文件</h5><p>为建立新的M文件，启动MATLAB编辑器有3种方法。<br>① 在MATLAB主窗口选择“主页”选项卡，在“文件”命令组中单击“新建脚本”命令按钮。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab4/20211109182936.png"></p><p>② 在MATLAB命令行窗口输入命令：<br>edit 文件名<br>启动MATLAB编辑器后，输入M文件的内容并存盘。<br>③ 在命令历史窗口选中一些命令（按住Ctrl可同时选择多条命令），然后从右键快捷菜单中选择“创建脚本”命令，将会启动MATLAB编辑器，并在编辑区中加入所选中的命令。</p><h5 id="2．打开已有的M文件"><a href="#2．打开已有的M文件" class="headerlink" title="2．打开已有的M文件"></a>2．打开已有的M文件</h5><p>打开已有的M文件，也有3种方法：<br>    (1) 菜单操作。在MATLAB主窗口选择“主页”选项卡，在“文件”命令组中单击“打开”命令按钮，再从弹出的下拉菜单中选择“打开”命令，从“打开”对话框中选择所需打开的M文件。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab4/20211109182952.png">    (2) 命令操作。在MATLAB命令窗口输入命令：edit 文件名，则打开指定的M文件。<br>    (3) 命令按钮操作。单击MATLAB主窗口工具栏上的Open File命令按钮，再从弹出的对话框中选择所需打开的M文件。</p><h4 id="4-1-2-M文件的分类"><a href="#4-1-2-M文件的分类" class="headerlink" title="4.1.2  M文件的分类"></a>4.1.2  M文件的分类</h4><p>   用MATLAB语言编写的程序，称为M文件。M文件可以根据调用方式的不同分为两类：脚本文件(Script File)和函数文件(Function File)。</p><blockquote><p><strong>脚本文件和函数文件的主要区别如下：</strong><br>① 脚本文件没有输入参数，也不返回输出参数，而函数文件可以带输入参数，也可返回输出参数。<br>② 脚本文件对MATLAB工作空间中的变量进行操作，文件中所有命令的执行结果也完全返回到工作空间中，而函数文件中定义的变量为局部变量，当函数文件执行完毕时，这些变量被清除。<br>③ 脚本文件可以直接运行，在MATLAB命令行窗口输入脚本文件的名字，就会顺序执行脚本文件中的命令，而函数文件不能直接运行，而要以函数调用的方式来调用它。</p></blockquote><p>建立一个命令文件将变量a,b的值互换，然后运行该命令文件。<br>    程序1：<br>首先建立命令文件并以文件名exch.m存盘：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">clear;</span><br><span class="line">a=<span class="number">1</span>:<span class="number">10</span>;</span><br><span class="line">b=[<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>;<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>];</span><br><span class="line">c=a;a=b;b=c;</span><br><span class="line">a</span><br><span class="line">b</span><br></pre></td></tr></table></figure><p>然后在MATLAB的命令窗口中输入exch，将会执行该命令文件。 </p><h3 id="4-2-程序控制结构"><a href="#4-2-程序控制结构" class="headerlink" title="4.2  程序控制结构"></a>4.2  程序控制结构</h3><h4 id="4-2-1-顺序结构"><a href="#4-2-1-顺序结构" class="headerlink" title="4.2.1  顺序结构"></a>4.2.1  顺序结构</h4><h5 id="1．数据的输入"><a href="#1．数据的输入" class="headerlink" title="1．数据的输入"></a>1．数据的输入</h5><p>从键盘输入数据，则可以使用input函数来进行，该函数的调用格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A=input(提示信息，选项)；</span><br></pre></td></tr></table></figure><p>其中提示信息为一个字符串，用于提示用户输入什么样的数据。<br>    如果在input函数调用时采用’s’选项，则允许用户输入一个字符串。例如：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xm=input(<span class="string">&#x27;What&#x27;&#x27;s your name?&#x27;</span>,<span class="string">&#x27;s&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="2．数据的输出"><a href="#2．数据的输出" class="headerlink" title="2．数据的输出"></a>2．数据的输出</h5><p>​    MATLAB提供的命令窗口输出函数主要有disp函数，其调用格式为<br>​    disp(输出项)<br>其中输出项既可以为字符串，也可以为矩阵。</p><p>例4-2  求一元二次方程ax2 +bx+c=0的根。<br>程序如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a=input(<span class="string">&#x27;a=&#x27;</span>);</span><br><span class="line">b=input(<span class="string">&#x27;b=&#x27;</span>);</span><br><span class="line">c=input(<span class="string">&#x27;c=&#x27;</span>);</span><br><span class="line">d=b*b<span class="number">-4</span>*a*c;</span><br><span class="line">x=[(-b+<span class="built_in">sqrt</span>(d))/(<span class="number">2</span>*a),(-b-<span class="built_in">sqrt</span>(d))/(<span class="number">2</span>*a)];</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;x1=&#x27;</span>,num2str(x(<span class="number">1</span>)),<span class="string">&#x27;,x2=&#x27;</span>,num2str(x(<span class="number">2</span>))]);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab4/20211109183009.png"></p><h5 id="3．程序的暂停"><a href="#3．程序的暂停" class="headerlink" title="3．程序的暂停"></a>3．程序的暂停</h5><p>​    暂停程序的执行可以使用pause函数，其调用格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pause(延迟秒数)</span><br></pre></td></tr></table></figure><p>​    如果省略延迟时间，直接使用pause，则将暂停程序，直到用户按任一键后程序继续执行。<br>​    若要强行中止程序的运行可使用Ctrl+C命令。</p><h4 id="4-2-2-选择结构"><a href="#4-2-2-选择结构" class="headerlink" title="4.2.2  选择结构"></a>4.2.2  选择结构</h4><h5 id="1．if语句"><a href="#1．if语句" class="headerlink" title="1．if语句"></a>1．if语句</h5><p>​    在MATLAB中，if语句有3种格式。<br>​    (1) 单分支if语句：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>  条件</span><br><span class="line">语句组</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>当条件成立时，则执行语句组，执行完之后继续执行if语句的后继语句，若条件不成立，则直接执行if语句的后继语句。</p><p>  (2) 双分支if语句：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>  条件</span><br><span class="line">    语句组<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">     语句组<span class="number">2</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>​    当条件成立时，执行语句组1，否则执行语句组2，语句组1或语句组2执行后，再执行if语句的后继语句。</p><p>计算分段函数。</p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab4/20211109183017.png" style="zoom:33%;" /><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x=input(<span class="string">&#x27;请输入x的值:&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> x==<span class="number">10</span></span><br><span class="line">     y=<span class="built_in">cos</span>(x+<span class="number">1</span>)+<span class="built_in">sqrt</span>(x*x+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">     y=x*<span class="built_in">sqrt</span>(x+<span class="built_in">sqrt</span>(x));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">y</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab4/20211109183023.png"></p><h5 id="3-多分支if语句："><a href="#3-多分支if语句：" class="headerlink" title="(3) 多分支if语句："></a>(3) 多分支if语句：</h5><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab4/20211109183033.png"></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>  条件<span class="number">1</span></span><br><span class="line">    语句组<span class="number">1</span></span><br><span class="line"><span class="keyword">elseif</span>  条件<span class="number">2</span></span><br><span class="line">    语句组<span class="number">2</span></span><br><span class="line">   ……</span><br><span class="line"><span class="keyword">elseif</span>  条件m</span><br><span class="line">     语句组m</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">     语句组n</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>例：输入一个字符，若为大写字母，则输出其对应的小写字母；若为小写字母，则输出其对应的大写字母；若为数字字符则输出其对应的数值，若为其他字符则原样输出。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">c=input(<span class="string">&#x27;请输入一个字符&#x27;</span>,<span class="string">&#x27;s&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> c&gt;=<span class="string">&#x27;A&#x27;</span> &amp; c&lt;=<span class="string">&#x27;Z&#x27;</span></span><br><span class="line">   <span class="built_in">disp</span>(setstr(<span class="built_in">abs</span>(c)+<span class="built_in">abs</span>(<span class="string">&#x27;a&#x27;</span>)-<span class="built_in">abs</span>(<span class="string">&#x27;A&#x27;</span>)));</span><br><span class="line"><span class="keyword">elseif</span> c&gt;=<span class="string">&#x27;a&#x27;</span>&amp; c&lt;=<span class="string">&#x27;z&#x27;</span></span><br><span class="line">    <span class="built_in">disp</span>(setstr(<span class="built_in">abs</span>(c)- <span class="built_in">abs</span>(<span class="string">&#x27;a&#x27;</span>)+<span class="built_in">abs</span>(<span class="string">&#x27;A&#x27;</span>)));</span><br><span class="line"><span class="keyword">elseif</span> c&gt;=<span class="string">&#x27;0&#x27;</span>&amp; c&lt;=<span class="string">&#x27;9&#x27;</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="built_in">abs</span>(c)-<span class="built_in">abs</span>(<span class="string">&#x27;0&#x27;</span>));</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">disp</span>(c);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h5 id="2．switch语句"><a href="#2．switch语句" class="headerlink" title="2．switch语句"></a>2．switch语句</h5><p>​    switch语句根据表达式的取值不同，分别执行不同的语句，其语句格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>  表达式</span><br><span class="line">   <span class="keyword">case</span>  表达式<span class="number">1</span></span><br><span class="line">      语句组<span class="number">1</span></span><br><span class="line">   <span class="keyword">case</span>  表达式<span class="number">2</span></span><br><span class="line">      语句组<span class="number">2</span></span><br><span class="line">      ……</span><br><span class="line">   <span class="keyword">case</span>  表达式m</span><br><span class="line">      语句组m</span><br><span class="line">   <span class="keyword">otherwise</span></span><br><span class="line">      语句组n</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab4/20211109183040.png" style="zoom:80%;" /><blockquote><p>当表达式的值等于表达式1的值时，执行语句组1，当表达式的值等于表达式2的值时，执行语句组2，…，当表达式的值等于表达式m的值时，执行语句组m，当表达式的值不等于case所列的表达式的值时，执行语句组n。当任意一个分支的语句执行完后，直接执行switch语句的下一句</p></blockquote><p>例：某商场对顾客所购买的商品实行打折销售，标准如下(商品价格用price来表示)：<br>    price&lt;200           没有折扣<br>    200≤price&lt;500      3%折扣<br>    500≤price&lt;1000     5%折扣<br>    1000≤price&lt;2500    8%折扣<br>    2500≤price&lt;5000    10%折扣<br>    5000≤price         14%折扣<br>输入所售商品的价格，求其实际销售价格。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">price=input(<span class="string">&#x27;请输入商品价格&#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> <span class="built_in">fix</span>(price/<span class="number">100</span>) </span><br><span class="line">   <span class="keyword">case</span> &#123;<span class="number">0</span>,<span class="number">1</span>&#125;             <span class="comment">%价格小于200</span></span><br><span class="line">      rate=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">case</span> &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;            <span class="comment">%价格大于等于200但小于500</span></span><br><span class="line">      rate=<span class="number">3</span>/<span class="number">100</span>;</span><br><span class="line">   <span class="keyword">case</span> <span class="built_in">num2cell</span>(<span class="number">5</span>:<span class="number">9</span>)       <span class="comment">%价格大于等于500但小于1000</span></span><br><span class="line">      rate=<span class="number">5</span>/<span class="number">100</span>;</span><br><span class="line">   <span class="keyword">case</span> <span class="built_in">num2cell</span>(<span class="number">10</span>:<span class="number">24</span>)     <span class="comment">%价格大于等于1000但小于2500</span></span><br><span class="line">      rate=<span class="number">8</span>/<span class="number">100</span>;</span><br><span class="line">   <span class="keyword">case</span> <span class="built_in">num2cell</span>(<span class="number">25</span>:<span class="number">49</span>)     <span class="comment">%价格大于等于2500但小于5000</span></span><br><span class="line">      rate=<span class="number">10</span>/<span class="number">100</span>;</span><br><span class="line">   <span class="keyword">otherwise</span>               <span class="comment">%价格大于等于5000</span></span><br><span class="line">      rate=<span class="number">14</span>/<span class="number">100</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">price=price*(<span class="number">1</span>-rate)              <span class="comment">%输出商品实际销售价格</span></span><br></pre></td></tr></table></figure><h5 id="3．try语句"><a href="#3．try语句" class="headerlink" title="3．try语句"></a>3．try语句</h5><p>语句格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">   语句组<span class="number">1</span></span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">   语句组<span class="number">2</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>try语句先试探性执行语句组1，如果语句组1在执行过程中出现错误，则将错误信息赋给保留的lasterr变量，并转去执行语句组2。</p><h4 id="4-2-3-循环结构"><a href="#4-2-3-循环结构" class="headerlink" title="4.2.3  循环结构"></a>4.2.3  循环结构</h4><h5 id="1．for语句"><a href="#1．for语句" class="headerlink" title="1．for语句"></a>1．for语句</h5><p>for语句的格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 循环变量=表达式<span class="number">1</span>:表达式<span class="number">2</span>:表达式<span class="number">3</span></span><br><span class="line">        循环体语句</span><br><span class="line">    <span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>其中，“表达式1:表达式2:表达式3”是一个冒号表达式，将产生一个行向量，3个表达式分别代表初值、步长和终值。步长为1时，表达式2可以省略。</p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab4/20211109183048.png" style="zoom:80%;" /><p>例：  一个三位整数各位数字的立方和等于该数本身则称该数为水仙花数。输出全部水仙花数。<br>程序如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> m=<span class="number">100</span>:<span class="number">999</span></span><br><span class="line">m1=<span class="built_in">fix</span>(m/<span class="number">100</span>);           <span class="comment">%求m的百位数字</span></span><br><span class="line">m2=<span class="built_in">rem</span>(<span class="built_in">fix</span>(m/<span class="number">10</span>),<span class="number">10</span>);   <span class="comment">%求m的十位数字</span></span><br><span class="line">m3=<span class="built_in">rem</span>(m,<span class="number">10</span>);             <span class="comment">%求m的个位数字</span></span><br><span class="line"><span class="keyword">if</span> m==m1*m1*m1+m2*m2*m2+m3*m3*m3</span><br><span class="line"><span class="built_in">disp</span>(m)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>or语句更一般的格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 循环变量=矩阵表达式</span><br><span class="line">       循环体语句</span><br><span class="line">    <span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>​    执行过程是依次将矩阵的各列元素赋给循环变量，然后执行循环体语句，直至各列元素处理完毕。</p><h5 id="2．while语句"><a href="#2．while语句" class="headerlink" title="2．while语句"></a>2．while语句</h5><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>语句的一般格式为：</span><br><span class="line"><span class="keyword">while</span> (条件)</span><br><span class="line">     循环体语句</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>​    其执行过程为：若条件成立，则执行循环体语句，执行后再判断条件是否成立，如果不成立则跳出循环。</p><h5 id="3．break语句和continue语句"><a href="#3．break语句和continue语句" class="headerlink" title="3．break语句和continue语句"></a>3．break语句和continue语句</h5><p>​    与循环结构相关的语句还有break语句和continue语句。它们一般与if语句配合使用。<br>​    break语句用于终止循环的执行。当在循环体内执行到该语句时，程序将跳出循环，继续执行循环语句的下一语句。<br>​    continue语句控制跳过循环体中的某些语句。当在循环体内执行到该语句时，程序将跳过循环体中所有剩下的语句，继续下一次循环。</p><h5 id="4．循环的嵌套"><a href="#4．循环的嵌套" class="headerlink" title="4．循环的嵌套"></a>4．循环的嵌套</h5><p>​    如果一个循环结构的循环体又包括一个循环结构，就称为循环的嵌套，或称为多重循环结构。<br>例：  若一个数等于它的各个真因子之和，则称该数为完数，如6=1+2+3，所以6是完数。求[1,500]之间的全部完数。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> m=<span class="number">1</span>:<span class="number">500</span></span><br><span class="line">s=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> k=<span class="number">1</span>:m/<span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">rem</span>(m,k)==<span class="number">0</span></span><br><span class="line">s=s+k;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> m==s</span><br><span class="line">    <span class="built_in">disp</span>(m);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="4-3-函数文件"><a href="#4-3-函数文件" class="headerlink" title="4.3 函数文件"></a>4.3 函数文件</h3><h5 id="4-3-1-函数文件的基本结构"><a href="#4-3-1-函数文件的基本结构" class="headerlink" title="4.3.1  函数文件的基本结构"></a>4.3.1  函数文件的基本结构</h5><p>​    函数文件由function语句引导，其基本结构为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 输出形参表=函数名<span class="params">(输入形参表)</span></span></span><br><span class="line">    注释说明部分</span><br><span class="line">    函数体语句</span><br></pre></td></tr></table></figure><p>其中以function开头的一行为引导行，表示该M文件是一个函数文件。函数名的命名规则与变量名相同。输入形参为函数的输入参数，输出形参为函数的输出参数。当输出形参多于一个时，则应该用方括号括起来。</p><h5 id="4-3-2-函数调用"><a href="#4-3-2-函数调用" class="headerlink" title="4.3.2  函数调用"></a>4.3.2  函数调用</h5><p>1.函数调用的一般格式是：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[输出实参表]=函数名(输入实参表)</span><br></pre></td></tr></table></figure><p>​    要注意的是，函数调用时各实参出现的顺序、个数，应与函数定义时形参的顺序、个数一致，否则会出错。函数调用时，先将实参传递给相应的形参，从而实现参数传递，然后再执行函数的功能。</p><p>2．函数的递归调用<br>在MATLAB中，函数可以嵌套调用，即一个函数可以调用别的函数，甚至调用它自身。一个函数调用它自身称为函数的递归调用。</p><p>例： 利用函数的递归调用，求n！。<br>    n!本身就是以递归的形式定义的：<br>   显然，求n!需要求(n-1)!，这时可采用递归调用。递归调用函数文件</p><p>factor.m如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>=<span class="title">factor</span><span class="params">(n)</span></span></span><br><span class="line"><span class="keyword">if</span> n&lt;=<span class="number">1</span></span><br><span class="line">   f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   f=<span class="built_in">factor</span>(n<span class="number">-1</span>)*n;    <span class="comment">%递归调用求(n-1)!</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h5 id="4-3-3-函数参数的可调性"><a href="#4-3-3-函数参数的可调性" class="headerlink" title="4.3.3  函数参数的可调性"></a>4.3.3  函数参数的可调性</h5><p>​    在调用函数时，MATLAB用两个<strong>永久变量nargin和nargout</strong>分别记录调用该函数时的输入实参和输出实参的个数。只要在函数文件中包含这两个变量，就可以准确地知道该函数文件被调用时的输入输出参数个数，从而决定函数如何进行处理。</p><blockquote><p>注意：</p><p>for k = [1,2,3,4]与 for k = [1;2;3;4]执行的次数不一样，第一个执行4次，第二只执行1次。</p></blockquote><h5 id="4-3-4-全局变量与局部变量"><a href="#4-3-4-全局变量与局部变量" class="headerlink" title="4.3.4  全局变量与局部变量"></a>4.3.4  全局变量与局部变量</h5><p>函数文件中的变量是局部的，即在一个函数文件中定义的变量不能被另一个函数文件引用。如果在若干函数中都把某一变量定义为全局变量，那么这些函数将共用这个变量，作用域是整个工作空间，即全程有效。<br>全局变量用global命令定义，格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">global</span> 变量名</span><br></pre></td></tr></table></figure><h3 id="4-4特殊形式的函数"><a href="#4-4特殊形式的函数" class="headerlink" title="4.4特殊形式的函数"></a>4.4特殊形式的函数</h3><h4 id="4-3-1、子函数"><a href="#4-3-1、子函数" class="headerlink" title="4.3.1、子函数"></a>4.3.1、子函数</h4><p>在MATLAB中，可以在一个M文件中同时定义多个函数，其中M文件中出现的第一个函数称为主函数（primary function），其他函数称为子函数（subfunction），但需要注意的是子函数只能由同一M文件中的函数调用。在保存M文件时，M文件名一般和主函数名相同，外部程序只能对主函数进行调用。</p><h4 id="2-内联函数"><a href="#2-内联函数" class="headerlink" title="2. 内联函数"></a>2. 内联函数</h4><p>以字符串形式存在的函数表达式可以通过inline函数转化成内联函数。例如a=’(x+y)^2’，可以通过f=inline(a)生成内联函数f(x,y)=(x+y)^2。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a=<span class="string">&#x27;(x+y)^2&#x27;</span>;</span><br><span class="line">f=inline(a)</span><br><span class="line">f =</span><br><span class="line">     内联函数:</span><br><span class="line">     f(x,y) = (x+y)^<span class="number">2</span></span><br><span class="line">f(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">49</span></span><br></pre></td></tr></table></figure><h4 id="3-匿名函数"><a href="#3-匿名函数" class="headerlink" title="3. 匿名函数"></a>3. 匿名函数</h4><p>匿名函数的基本格式如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">匿名函数名=@(输入参数) 匿名函数表达式</span><br></pre></td></tr></table></figure><p>其中，匿名函数的输入参数可以是一个，也可以是多个，有多个参数时，参数间用逗号分隔。例如：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; f=@(x,y) x^<span class="number">2</span>+y^<span class="number">2</span>;</span><br><span class="line">f(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="number">25</span></span><br></pre></td></tr></table></figure><h3 id="4-5程序调试与优化"><a href="#4-5程序调试与优化" class="headerlink" title="4.5程序调试与优化"></a>4.5程序调试与优化</h3><h4 id="4-5-1-程序调试方法"><a href="#4-5-1-程序调试方法" class="headerlink" title="4.5.1  程序调试方法"></a>4.5.1  程序调试方法</h4><p>一般来说，应用程序的错误有两类，一类是语法错误，另一类是运行时的错误。语法错误包括词法或文法的错误，例如函数名的拼写错、表达式书写错等。</p><h5 id="程序优化"><a href="#程序优化" class="headerlink" title="程序优化"></a>程序优化</h5><p>（1）采用向量化运算<br>在实际MATLAB程序设计中，为了提高程序的执行速度，常用向量或矩阵运算来代替循环操作。<br>（2）预分配内存空间<br>通过在循环之前预分配向量或数组的内存空间可以提高for循环的处理速度。<br>（3）减小运算强度<br>在实现有关运算时，尽量采用运算量更小的运算，从而提高运算速度。一般来说，乘法比乘方运算快，加法比乘法运算快。</p>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二、MATLAB数据及其运算</title>
      <link href="/2021/11/09/matlab/%E4%BA%8C%E3%80%81MATLAB%E6%95%B0%E6%8D%AE%E5%8F%8A%E5%85%B6%E8%BF%90%E7%AE%97/"/>
      <url>/2021/11/09/matlab/%E4%BA%8C%E3%80%81MATLAB%E6%95%B0%E6%8D%AE%E5%8F%8A%E5%85%B6%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h2 id="二、MATLAB数据及其运算"><a href="#二、MATLAB数据及其运算" class="headerlink" title="二、MATLAB数据及其运算"></a>二、MATLAB数据及其运算</h2><blockquote><p><strong>声明：</strong><br>笔记是学习慕课网《科学计算与MATLAB语言》课程和刘卫国主编的《MATLAB程序设计与应用（第3版）》后的个人总结，方便自己以后巩固和复习！</p></blockquote><h3 id="2-1-Matlab数值数据"><a href="#2-1-Matlab数值数据" class="headerlink" title="2.1  Matlab数值数据"></a>2.1  Matlab数值数据</h3><h4 id="2-1-1-数值数据类型的分类"><a href="#2-1-1-数值数据类型的分类" class="headerlink" title="2.1.1  数值数据类型的分类"></a>2.1.1  数值数据类型的分类</h4><h5 id="1．整型"><a href="#1．整型" class="headerlink" title="1．整型"></a>1．整型</h5><p>整型数据是不带小数的数，分为有带符号整数和无符号整数。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/0.png"></p><h5 id="2．浮点型"><a href="#2．浮点型" class="headerlink" title="2．浮点型"></a>2．浮点型</h5><p>浮点型数据有单精度（single）和双精度（double）之分，单精度型实数在内存中占用4个字节，双精度型实数在内存中占用8个字节，双精度型的数据精度更高。</p><p>在Matlab中，数据默认为双精度型。</p><blockquote><p>single函数 可以将其他类型的数据转换为单精度型；利用class可以得到参数的数据类型。</p><p>double函数 可以将其他类型的数据转换为双精度型。</p></blockquote><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/1.png"></p><h5 id="3．复型"><a href="#3．复型" class="headerlink" title="3．复型"></a>3．复型</h5><p>复型数据包括实部和虚部两个部分，实部和虚部默认为双精度型。</p><p>在MATLAB中，虚数单位用i或j表示。</p><blockquote><p>例如，6+5i与6+5j表示的是同一个复数，也可以写成6+5<em>i或6+5</em>j，这里将i或j看作一个运算量参与表达式的运算。</p></blockquote><h4 id="2-1-2-数据的输出格式"><a href="#2-1-2-数据的输出格式" class="headerlink" title="2.1.2  数据的输出格式"></a>2.1.2  数据的输出格式</h4><p>MATLAB用十进制数表示一个常数，具体可采用日常记数法和科学记数法两种表示方法。</p><p>format命令的格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">format 格式符  </span><br></pre></td></tr></table></figure><p>其中，格式符决定数据的输出格式，各种格式符及其含义如表所示。</p><table><thead><tr><th><strong>格式符</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td><strong>short</strong></td><td><strong>输出小数点后4位，最多不超过7位有效数字。对于大于1000的实数，用5位有效数字的科学记数形式输出</strong></td></tr><tr><td><strong>long</strong></td><td><strong>15位有效数字形式输出</strong></td></tr><tr><td><strong>short e</strong></td><td><strong>5位有效数字的科学记数形式输出</strong></td></tr><tr><td><strong>long e</strong></td><td><strong>15位有效数字的科学记数形式输出</strong></td></tr><tr><td><strong>short g</strong></td><td><strong>从short和short e中自动选择最佳输出方式</strong></td></tr><tr><td><strong>long g</strong></td><td><strong>从long和long e中自动选择最佳输出方式</strong></td></tr><tr><td><strong>rat</strong></td><td><strong>近似有理数表示</strong></td></tr><tr><td><strong>hex</strong></td><td><strong>十六进制表示</strong></td></tr><tr><td><strong>+</strong></td><td><strong>正数、负数、零分别用+、-、空格表示</strong></td></tr><tr><td><strong>bank</strong></td><td><strong>银行格式，用元、角、分表示</strong></td></tr><tr><td><strong>compact</strong></td><td><strong>输出变量之间没有空行</strong></td></tr><tr><td><strong>loose</strong></td><td><strong>输出变量之间有空行</strong></td></tr></tbody></table><blockquote><p><strong>注意：format命令只影响数据输出格式，而不影响数据的计算和存储。</strong></p></blockquote><h3 id="2-2-MATLAB矩阵的表示"><a href="#2-2-MATLAB矩阵的表示" class="headerlink" title="2.2 MATLAB矩阵的表示"></a>2.2 MATLAB矩阵的表示</h3><h4 id="2-2-1-矩阵的建立"><a href="#2-2-1-矩阵的建立" class="headerlink" title="2.2.1  矩阵的建立"></a>2.2.1  矩阵的建立</h4><p>1．直接输入法:</p><p>最简单的建立矩阵的方法是从键盘直接输入矩阵的元素。</p><p>具体方法如下：将矩阵的元素用方括号括起来，按矩阵行的顺序输入各元素，同一行的各元素之间用空格或逗号分隔，不同行的元素之间用分号分隔。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/2.png"></p><h4 id="2-2-2-冒号表达式"><a href="#2-2-2-冒号表达式" class="headerlink" title="2.2.2   冒号表达式"></a>2.2.2   冒号表达式</h4><p>冒号表达式可以产生一个行向量，</p><p>一般格式是： </p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e1:e2:e3</span><br></pre></td></tr></table></figure><p>其中e1为初始值，e2为步长，e3为终止值。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/3.png"></p><p>初始值:4 步长:3 终止值:12。</p><p>在MATLAB中，还可以用linspace函数产生行向量。</p><p>其调用格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">linspace</span>(a,b,n)</span><br></pre></td></tr></table></figure><p>其中a和b是生成向量的第一个和最后一个元素，n是元素总数。</p><blockquote><p>显然，linspace(a,b,n)与a:(b-a)/(n-1):b等价</p></blockquote><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/4.png"></p><h4 id="2-2-3-矩阵的引用"><a href="#2-2-3-矩阵的引用" class="headerlink" title="2.2.3  矩阵的引用"></a>2.2.3  矩阵的引用</h4><h5 id="1．矩阵元素的引用方式"><a href="#1．矩阵元素的引用方式" class="headerlink" title="1．矩阵元素的引用方式"></a>1．矩阵元素的引用方式</h5><p>MATLAB通过下标引用矩阵的元素</p><blockquote><p>例如：A(3,2)=200</p></blockquote><p>也可以采用矩阵元素的序号来引用矩阵元素。矩阵元素的序号就是相应元素在内存中的排列顺序。</p><p>在MATLAB中，矩阵元素按列存储，先第一列，再第二列，依次类推。<br> 显然，序号(Index)与下标(Subscript )是一一对应的，以m×n矩阵A为例，矩阵元素A(i,j)的序号为(j-1)*m+i。其相互转换关系也可利用sub2ind和ind2sub函数求得。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/5.png"></p><h5 id="2-利用冒号表达式获得子矩阵"><a href="#2-利用冒号表达式获得子矩阵" class="headerlink" title="2.利用冒号表达式获得子矩阵"></a>2.利用冒号表达式获得子矩阵</h5><p>① A(:,j)表示取A矩阵的第j列全部元素；A(i,:)表示A矩阵第i行的全部元素；A(i,j)表示取A矩阵第i行、第j列的元素。</p><p>② A(i:i+m,:)表示取A矩阵第i～i+m行的全部元素；A(:,k:k+m)表示取A矩阵第k～k+m列的全部元素，A(i:i+m,k:k+m)表示取A矩阵第i～i+m行内，并在第k～k+m列中的所有元素。 ③A(:)将矩阵A每一列元素堆叠起来，成为一个列向量，而这也是MATLAB变量的内部储存方式。</p><h5 id="3-利用空矩阵删除矩阵的元素"><a href="#3-利用空矩阵删除矩阵的元素" class="headerlink" title="3.利用空矩阵删除矩阵的元素"></a>3.利用空矩阵删除矩阵的元素</h5><p>在MATLAB中，定义[]为空矩阵。给变量X赋空矩阵的语句为</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X=[]</span><br></pre></td></tr></table></figure><p>注意，X=[]与clear X不同，clear是将X从工作空间中删除，而空矩阵则存在于工作空间中，只是维数为0。</p><h5 id="4．改变矩阵的形状"><a href="#4．改变矩阵的形状" class="headerlink" title="4．改变矩阵的形状"></a>4．改变矩阵的形状</h5><p>reshape(A,m,n)函数在矩阵总元素保持不变的前提下，将矩阵A重新排成m×n的二维矩阵。</p><p>例如：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">23</span>,<span class="number">45</span>,<span class="number">65</span>,<span class="number">34</span>,<span class="number">65</span>,<span class="number">34</span>,<span class="number">98</span>,<span class="number">45</span>,<span class="number">78</span>,<span class="number">65</span>,<span class="number">43</span>,<span class="number">76</span></span><br><span class="line">y=<span class="built_in">reshape</span>(x,<span class="number">3</span>,<span class="number">4</span></span><br><span class="line">y =</span><br><span class="line">    <span class="number">23</span>    <span class="number">34</span>    <span class="number">98</span>    <span class="number">65</span></span><br><span class="line">    <span class="number">45</span>    <span class="number">65</span>    <span class="number">45</span>    <span class="number">43</span></span><br><span class="line">    <span class="number">65</span>    <span class="number">34</span>    <span class="number">78</span>    <span class="number">76</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><p>reshape函数只是改变原矩阵的行数和列数，即改变其逻辑结构，但并不改变原矩阵元素个数及其存储顺序。<br>A(:)将矩阵A的每一列元素堆叠起来，成为一个列向量，从而改变了矩阵的形状。</p></blockquote><h3 id="2-3-变量及其操作"><a href="#2-3-变量及其操作" class="headerlink" title="2.3  变量及其操作"></a>2.3  变量及其操作</h3><h4 id="2-3-1-变量与赋值语句"><a href="#2-3-1-变量与赋值语句" class="headerlink" title="2.3.1  变量与赋值语句"></a>2.3.1  变量与赋值语句</h4><h5 id="1．变量命名"><a href="#1．变量命名" class="headerlink" title="1．变量命名"></a>1．变量命名</h5><p>在MATLAB 7.0中，<strong>变量名是以字母开头，后接字母、数字或下划线的字符序列，最多63个字符。</strong>在MATLAB中，变量名区分字母的大小写。</p><h5 id="2．赋值语句"><a href="#2．赋值语句" class="headerlink" title="2．赋值语句"></a>2．赋值语句</h5><blockquote><p>(1) 变量=表达式 </p><p>(2) 表达式</p></blockquote><p>其中表达式是用运算符将有关运算量连接起来的式子，其结果是一个矩阵。</p><p>例如：计算表达式的值，并显示计算结果</p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/6.png" style="zoom:33%;" /><p>在MATLAB命令窗口输入命令：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; x=<span class="built_in">sqrt</span>(<span class="number">7</span>)<span class="number">-2</span><span class="built_in">i</span>;</span><br><span class="line">y=<span class="built_in">exp</span>(<span class="built_in">pi</span>/<span class="number">2</span>);</span><br><span class="line">z=(<span class="number">5</span>+<span class="built_in">cos</span>(<span class="number">47</span>*<span class="built_in">pi</span>/<span class="number">180</span>))/(<span class="number">1</span>+<span class="built_in">abs</span>(x-y))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/7.png"></p><h4 id="2-3-2预定义变量"><a href="#2-3-2预定义变量" class="headerlink" title="2.3.2预定义变量"></a>2.3.2预定义变量</h4><p> 在MATLAB工作空间中，还驻留几个由系统本身定义的变量。例如，用pi表示圆周率π的近似值，用i，j表示虚数单位。</p><p><strong>预定义变量有特定的含义，在使用时，应尽量避免对这些变量重新赋值。</strong></p><h4 id="2-3-3-变量的管理"><a href="#2-3-3-变量的管理" class="headerlink" title="2.3.3  变量的管理"></a>2.3.3  变量的管理</h4><h5 id="1．内存变量的删除与修改"><a href="#1．内存变量的删除与修改" class="headerlink" title="1．内存变量的删除与修改"></a>1．内存变量的删除与修改</h5><p>MATLAB工作区窗口专门用于内存变量的管理。在工作区窗口中可以显示所有内存变量的属性。</p><p>who和whos这两个命令用于显示在MATLAB工作空间中已经驻留的变量名清单。</p><blockquote><p>who命令只显示出驻留变量的名称；</p><p>whos在给出变量名的同时，还给出它们的大小、所占字节数及数据类型等信息。 </p></blockquote><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/8.png"></p><blockquote><p>clear命令用于删除MATLAB工作空间中的变量。</p></blockquote><p>2．内存变量文件利用MAT文件可以把当前MATLAB工作空间中的一些有用变量长久地保留下来，扩展名是.mat。MAT文件的生成和装入由save和load命令来完成。常用格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">save 文件名 [变量名表]  [-append] [-ascii]</span><br><span class="line">load 文件名  [变量名表]  [-ascii]</span><br></pre></td></tr></table></figure><p>其中，文件名可以带路径，但不需带扩展名.mat，命令隐含一定对.mat文件进行操作。变量名表中的变量个数不限，只要内存或文件中存在即可，变量名之间以空格分隔。当变量名表省略时，保存或装入全部变量。-ascii选项使文件以ASCII格式处理，省略该选项时文件将以二进制格式处理。save命令中的-append选项控制将变量追加到MAT文件中。</p><h3 id="2-4-MATLAB常用内部函数"><a href="#2-4-MATLAB常用内部函数" class="headerlink" title="2.4  MATLAB常用内部函数"></a>2.4  MATLAB常用内部函数</h3><h4 id="2-4-1-常用数学函数"><a href="#2-4-1-常用数学函数" class="headerlink" title="2.4.1  常用数学函数"></a>2.4.1  常用数学函数</h4><p>MATLAB提供了许多数学函数，函数的自变量规定为矩阵变量，运算法则是将函数逐项作用于矩阵的元素上，因而运算的结果是一个与自变量同维数的矩阵。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/9.png"></p><h4 id="2-4-2-矩阵的超越函数"><a href="#2-4-2-矩阵的超越函数" class="headerlink" title="2.4.2  矩阵的超越函数"></a>2.4.2  矩阵的超越函数</h4><p>MATLAB还提供了一些直接作用于矩阵的超越函数，这些函数名都在上述内部函数名之后缀以m，并规定输入参数A必须是方阵。</p><h5 id="1．矩阵平方根"><a href="#1．矩阵平方根" class="headerlink" title="1．矩阵平方根"></a>1．矩阵平方根</h5><p>sqrtm(A)计算矩阵A的平方根。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/10.png"></p><h5 id="2．矩阵对数"><a href="#2．矩阵对数" class="headerlink" title="2．矩阵对数"></a>2．矩阵对数</h5><p>logm(A)计算矩阵A的自然对数。此函数输入参数的条件与输出结果间的关系和函数sqrtm(A)完全一样。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/11.png"></p><h5 id="3．矩阵指数"><a href="#3．矩阵指数" class="headerlink" title="3．矩阵指数"></a>3．矩阵指数</h5><p>expm(A)的功能都是求矩阵指数eA。例如，对上面计算所得到的A的自然对数b.</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/12.png"></p><h5 id="4．普通矩阵函数"><a href="#4．普通矩阵函数" class="headerlink" title="4．普通矩阵函数"></a>4．普通矩阵函数</h5><p>funm(A,@fun)对方阵A计算由fun定义的函数的矩阵函数值。例如，当fun取exp时，funm(A,@exp)可以计算矩阵A的指数，与expm(A)的计算结果一样。</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/13.png"></p><h3 id="2-5-MATLAB运算"><a href="#2-5-MATLAB运算" class="headerlink" title="2.5 MATLAB运算"></a>2.5 MATLAB运算</h3><h4 id="2-5-1-算术运算"><a href="#2-5-1-算术运算" class="headerlink" title="2.5.1  算术运算"></a>2.5.1  算术运算</h4><h5 id="1．基本算术运算"><a href="#1．基本算术运算" class="headerlink" title="1．基本算术运算"></a>1．基本算术运算</h5><p>MATLAB的基本算术运算有：＋(加)、－(减)、*(乘)、/(右除)、(左除)、^(乘方)。</p><p>注意，运算是在矩阵意义下进行的，单个数据的算术运算只是一种特例。</p><p> (1) 矩阵加减运算</p><blockquote><p>假定有两个矩阵A和B，则可以由A+B和A-B实现矩阵的加减运算。运算规则是：若A和B矩阵的维数相同，则可以执行矩阵的加减运算，A和B矩阵的相应元素相加减。如果A与B的维数不相同，则MATLAB将给出错误信息，提示用户两个矩阵的维数不匹配。</p></blockquote><p>(2) 矩阵乘法</p><blockquote><p>假定有两个矩阵A和B，若A为m×n矩阵，B为n×p矩阵，则C=A*B为m×p矩阵。</p></blockquote><p>(3) 矩阵除法</p><blockquote><p>在MATLAB中，有两种矩阵除法运算：\和/，分别表示左除和右除。</p><p>如果A矩阵是非奇异方阵，则A\B和B/A运算可以实现。</p><blockquote><p>A\B等效于A的逆左乘B矩阵，也就是inv(A) *B，</p><p>而B/A等效于A矩阵的逆右乘B矩阵，也就是B*inv(A)。</p></blockquote></blockquote><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/14.png"></p><p>  (4) 矩阵的乘方</p><p>一个矩阵的乘方运算可以表示成A^x，要求A为方阵，x为标量。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A^<span class="number">2</span> = A*A</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/15.png"></p><h5 id="2．点运算"><a href="#2．点运算" class="headerlink" title="2．点运算"></a>2．点运算</h5><p>在MATLAB中，有一种特殊的运算，因为其运算符是在有关算术运算符前面加点，所以叫点运算。点运算符有.*、./、.\和.^。两矩阵进行点运算是指它们的对应元素进行相关运算，要求两矩阵的维参数相同。</p><h4 id="2-5-2-关系运算"><a href="#2-5-2-关系运算" class="headerlink" title="2.5.2  关系运算"></a>2.5.2  关系运算</h4><blockquote><p> MATLAB提供了6种关系运算符：</p><p> &lt;(小于)、&lt;=(小于或等于)、&gt;(大于)、&gt;=(大于或等于)、==(等于)、～=(不等于)。<br> 它们的含义不难理解，但要注意其书写方法与数学中的不等式符号不尽相同。</p></blockquote><p>关系运算符的运算法则为：</p><blockquote><p> (1) 当两个比较量是标量时，直接比较两数的大小。若关系成立，关系表达式结果为1，否则为0。</p><p> (2) 当参与比较的量是两个维数相同的矩阵时，比较是对两矩阵相同位置的元素按标量关系运算规则逐个进行，并给出元素比较结果。最终的关系运算的结果是一个维数与原矩阵相同的矩阵，它的元素由0或1组成。</p><p> (3) 当参与比较的一个是标量，而另一个是矩阵时，则把标量与矩阵的每一个元素按标量关系运算规则逐个比较，并给出元素比较结果。最终的关系运算的结果是一个维数与原矩阵相同的矩阵，它的元素由0或1组成。</p></blockquote><p>   例如：</p><p>建立5阶方阵A，判断A的元素是否能被3整除</p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/Matlab2/16.png"></p><blockquote><p>其中，rem(A,3)是矩阵A的每个元素除以3的余数矩阵。此时，0被扩展为与A同维数的零矩阵，P是进行等于(==)比较的结果矩阵。</p></blockquote><h4 id="2-5-3-逻辑运算"><a href="#2-5-3-逻辑运算" class="headerlink" title="2.5.3  逻辑运算"></a>2.5.3  逻辑运算</h4><p> MATLAB提供了3种逻辑运算符：&amp;(与)、|(或)和～(非)。</p><p>逻辑运算的运算法则为：</p><blockquote><p>(1) 在逻辑运算中，确认非零元素为真，用1表示，零元素为假，用0表示。</p><p>(2) 设参与逻辑运算的是两个标量a和b，</p><p>那么，a&amp;b  a,b全为非零时，运算结果为1，否则为0。</p><p>a|b  a,b中只要有一个非零，运算结果为1。</p><p>～a  当a是零时，运算结果为1；当a非零时，运算结果为0。</p><p>(3) 若参与逻辑运算的是两个同维矩阵，那么运算将对矩阵相同位置上的元素按标量规则逐个进行。最终运算结果是一个与原矩阵同维的矩阵，其元素由1或0组成。</p><p>(4) 若参与逻辑运算的一个是标量，一个是矩阵，那么运算将在标量与矩阵中的每个元素之间按标量规则逐个进行。最终运算结果是一个与矩阵同维的矩阵，其元素由1或0组成。</p><p>(5) 逻辑非是单目运算符，也服从矩阵运算规则。</p><p>(6) 在算术、关系、逻辑运算中，算术运算优先级最高，逻辑运算优先级最低。</p></blockquote><h3 id="2-6-字符串"><a href="#2-6-字符串" class="headerlink" title="2.6  字符串"></a>2.6  字符串</h3><p>在MATLAB中，字符串是用单撇号括起来的字符序列。</p><p>MATLAB将字符串当作一个行向量，每个元素对应一个字符，其标识方法和数值向量相同。也可以建立多行字符串矩阵。</p><h5 id="2-6-1-字符串的表示"><a href="#2-6-1-字符串的表示" class="headerlink" title="2.6.1  字符串的表示"></a>2.6.1  字符串的表示</h5><p>在MATLAB中，字符串是用单引号括起来的字符序列。例如：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xm=<span class="string">&#x27;Central South University&#x27;</span></span><br></pre></td></tr></table></figure><p>例：建立一个字符串向量，然后对该向量做如下处理：</p><blockquote><p>(1) 取第1～5个字符组成的子字符串。</p><p>(2) 将字符串倒过来重新排列。</p><p>(3) 将字符串中的小写字母变成相应的大写字母，其余字符不变。</p><p>(4) 统计字符串中小写字母的个数。</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ch=<span class="string">&#x27;ABc123d4e56Fg9&#x27;</span>;</span><br><span class="line">subch=ch(<span class="number">1</span>:<span class="number">5</span>)           <span class="comment">%取子字符串</span></span><br><span class="line">revch=ch(<span class="keyword">end</span>:<span class="number">-1</span>:<span class="number">1</span>)       <span class="comment">%将字符串倒排</span></span><br><span class="line">k=<span class="built_in">find</span>(ch&gt;=<span class="string">&#x27;a&#x27;</span>&amp;ch&lt;=<span class="string">&#x27;z&#x27;</span>);     <span class="comment">%找小写字母的位置</span></span><br><span class="line">ch(k)=ch(k)-(<span class="string">&#x27;a&#x27;</span>-<span class="string">&#x27;A&#x27;</span>);         <span class="comment">%将小写字母变成相应的大写字母</span></span><br><span class="line">char(ch)                </span><br><span class="line"><span class="built_in">length</span>(k)                  <span class="comment">%统计小写字母的个数</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注意是英文下的单撇号；’ABc123d4e56Fg9’，不是‘ABc123d4e56Fg9’</p></blockquote><h5 id="2-6-2-字符串的操作"><a href="#2-6-2-字符串的操作" class="headerlink" title="2.6.2  字符串的操作"></a>2.6.2  字符串的操作</h5><p>1．字符串的执行<br>与字符串有关的一个重要函数是eval，它的作用是把字符串的内容作为对应的MATLAB命令来执行，其调用格式为：<br>eval(s)<br>其中s为字符串。例如：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; t=<span class="built_in">pi</span>;</span><br><span class="line">m=<span class="string">&#x27;[t,sin(t),cos(t)]&#x27;</span>;</span><br><span class="line">y=eval(m)</span><br><span class="line">y =</span><br><span class="line">    <span class="number">3.1416</span>    <span class="number">0.0000</span>   <span class="number">-1.0000</span></span><br></pre></td></tr></table></figure><p>2．字符串与数值之间的转换<br>字符串是以ASCII码形式存储的，abs和double函数都可以用来获取字符串矩阵所对应的ASCII码数值矩阵。</p><p>3．字符串的连接<br>在MATLAB中，要将两个字符串连接在一起，有两种常见方法：一是用字符串向量，二是用strcat函数。</p><p>4．字符串的比较<br>字符串的比较有两种方法：<strong>利用关系运算符</strong>或<strong>字符串比较函数</strong>。<br>当两个字符串拥有相同的长度时，可以利用关系运算符对字符串进行比较，比较的规则是按ASCII值大小逐个字符进行比较，比较的结果是一个数值向量，其元素为对应字符比较的结果。例如：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="string">&#x27;www0&#x27;</span>&gt;=<span class="string">&#x27;W123&#x27;</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span></span><br></pre></td></tr></table></figure><p>字符串比较函数用于判断字符串是否相等，有4种比较方式，函数如下：</p><blockquote><p>① strcmp(s1,s2)：用来比较字符串s1和s2是否相等，如果相等，返回1，否则返回0。<br>② strncmp(s1,s2,n)：用来比较前n个字符是否相等，如果相等，返回1，否则返回0。<br>③ strcmpi(s1,s2)：在忽略字母大小写前提下，比较字符串s1和s2是否相等，如果相等，返回1，否则返回0。<br>④ strncmpi(s1,s2,n)：在忽略字符串大小写前提下，比较前n个字符是否相等，如果相等，返回1，否则返回0。</p></blockquote><h3 id="2-7-结构数据和单元数据"><a href="#2-7-结构数据和单元数据" class="headerlink" title="2.7  结构数据和单元数据"></a>2.7  结构数据和单元数据</h3><h5 id="2-7-1-结构数据"><a href="#2-7-1-结构数据" class="headerlink" title="2.7.1  结构数据"></a>2.7.1  结构数据</h5><p>1．结构矩阵的建立与引用</p><p>建立一个结构矩阵可采用给结构成员赋值的办法。</p><p>具体格式为：</p><blockquote><p>结构矩阵名.成员名=表达式</p><p>其中表达式应理解为矩阵表达式。</p></blockquote><p>2．结构成员的修改</p><p>可以根据需要增加或删除结构的成员。</p><p>例如要给结构矩阵a增加一个成员x4，可给a中任意一个元素增加成员x4：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a(<span class="number">1</span>).x4=‘<span class="number">410075</span>’;</span><br></pre></td></tr></table></figure><p>但其他成员均为空矩阵，可以使用赋值语句给它赋确定的值。</p><p>要删除结构的成员，则可以使用rmfield函数来完成。</p><p>例如，删除成员x4：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=rmfield(a,‘x4’);</span><br></pre></td></tr></table></figure><h5 id="2-7-2-单元数据"><a href="#2-7-2-单元数据" class="headerlink" title="2.7.2  单元数据"></a>2.7.2  单元数据</h5><p>建立单元矩阵和一般矩阵相似，只是矩阵元素用大括号括起来。</p><p>可以用带有大括号下标的形式引用单元矩阵元素。例如b{3,3}。单元矩阵的元素可以是结构或单元数据。</p><p>可以使用celldisp函数来显示整个单元矩阵，如celldisp(b)。</p>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写博客的意义</title>
      <link href="/2021/11/08/hello_Blog/hello-world/"/>
      <url>/2021/11/08/hello_Blog/hello-world/</url>
      
        <content type="html"><![CDATA[<p><img src="/img/matlab1.jpg"></p><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/CSDN_51che/src=http---www.mianfeiwendang.com-pic-19484a0c6efc11aab2a7cef732243488c7b81bc4-1-810-jpg_6-1080-0-0-1080.jpg&refer=http---www.mianfeiwendang.jpg"></p><blockquote><p>2021年11月7日创建了这个博客。</p></blockquote><blockquote><h3 id="搭建个人博客和写博客的意义："><a href="#搭建个人博客和写博客的意义：" class="headerlink" title="搭建个人博客和写博客的意义："></a>搭建个人博客和写博客的意义：</h3><p>①、便于以后对知识点的巩固复习；</p><p>②、建立起自己的知识清单；</p><p>③、记录学习中遇到的一些问题；</p><p>④、提高自己的写作能力；</p><p>⑤、为自己以后面试加分；</p><p>⑥、认识很多有意思的朋友；</p><p>⑦、提高阅读量，认识度。</p><p>⑧、在浩瀚无穷的网络世界留下属于我的足迹！</p></blockquote><p><img src="https://gitee.com/peng_xiang_li/Blogimage/raw/master/CSDN_51che/src=http---inews.gtimg.com-newsapp_match-0-5577924328-0.jpg&refer=http---inews.gtimg.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
